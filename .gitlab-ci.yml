stages:
  - Unit Tests
  - Integration Tests

# SQL Variables for the WordPress tests
variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: wordpress_tests
  MYSQL_ROOT_PASSWORD: mysql

# Unit Test Stage

## PHP Unit Tests
PHP 7.3 Unit:
  stage: Unit Tests
  image: edbizarro/gitlab-ci-pipeline-php:7.3-alpine
  script:
    - if [ -d "vendor" ]; then rm -Rf vendor; fi
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress
    - composer test:unit

PHP 7.2 Unit:
  stage: Unit Tests
  image: edbizarro/gitlab-ci-pipeline-php:7.2-alpine
  script:
    - if [ -d "vendor" ]; then rm -Rf vendor; fi
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress
    - composer test:unit

## JavaScript Unit Tests
JS Unit Test:
  image: node:latest
  stage: Unit Tests
  script:
    - yarn
    - yarn build
    - yarn test:once

# Integration Test Stage
WP-Integration:
  image: tetraweb/php:7.1
  stage: Integration Tests
  services:
    - mysql:5.6
  script:
    - phpunit --configuration phpunit-integration.xml.dist
  before_script:
    # Install dependencies
    # update the docker
    - apt-get clean
    - apt-get -yqq update

    # install the required packages for the running CI tests
    - apt-get -yqqf install zip unzip subversion mysql-client libmysqlclient-dev --fix-missing

    # PHP extensions
    - docker-php-ext-enable mbstring mcrypt mysqli pdo_mysql intl gd zip bz2

    # Set up WordPress tests
    - bash bin/install-wp-tests.sh wordpress_tests root mysql mysql latest true

    # Install composer, then install with composer
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install --no-dev
    - php composer.phar global require "phpunit/phpunit:^6"
