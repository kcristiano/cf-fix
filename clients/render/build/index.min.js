this["calderaForms"] = this["calderaForms"] || {}; this["calderaForms"]["render"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./clients/render/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./clients/render/components/CalderaFormsFieldGroup.js":
/*!*************************************************************!*\
  !*** ./clients/render/components/CalderaFormsFieldGroup.js ***!
  \*************************************************************/
/*! exports provided: CalderaFormsFieldGroup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalderaFormsFieldGroup", function() { return CalderaFormsFieldGroup; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _CalderaFormsFieldRender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CalderaFormsFieldRender */ "./clients/render/components/CalderaFormsFieldRender.js");
/* harmony import */ var _Fields_Input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Fields/Input */ "./clients/render/components/Fields/Input.js");
/* harmony import */ var _Fields_FileInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Fields/FileInput */ "./clients/render/components/Fields/FileInput.js");





/**
 * Render a Caldera Forms v2 field
 *
 * @since 1.8.0
 *
 * @param props
 * @return {*}
 * @constructor
 */

var CalderaFormsFieldGroup = function CalderaFormsFieldGroup(props) {
  var field = props.field,
      onChange = props.onChange,
      shouldDisable = props.shouldDisable,
      shouldShow = props.shouldShow,
      hasMessage = props.hasMessage,
      isError = props.isError,
      message = props.message,
      getFieldConfig = props.getFieldConfig,
      strings = props.strings;
  var type = field.type,
      outterIdAttr = field.outterIdAttr,
      fieldId = field.fieldId,
      fieldLabel = field.fieldLabel,
      fieldCaption = field.fieldCaption,
      hideLabel = field.hideLabel,
      isRequired = field.isRequired,
      fieldPlaceHolder = field.fieldPlaceHolder,
      fieldDefault = field.fieldDefault,
      fieldValue = field.fieldValue,
      fieldIdAttr = field.fieldIdAttr,
      isInvalid = field.isInvalid,
      areValuesValid = field.areValuesValid;

  if (!shouldShow) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0__["Fragment"], null);
  }

  var hasCaption = field.hasOwnProperty('caption') && field.caption.length;
  var captionId = "".concat(fieldIdAttr, "Caption");
  var hasError = isError || hasMessage && message.error || !areValuesValid;
  /**
   * Create the inside -- ie the input/select/etc -- of a field.
   *
   * @since 1.8.0
   *
   * @return {*}
   * @constructor
   */

  var Inside = function Inside() {
    var className = 'form-control cf2-field';
    className = hasError ? className + ' parsley-error' : className;
    className = className + ' cf2-' + type;

    switch (type) {
      case 'file':
        var fileProps = _Fields_FileInput__WEBPACK_IMPORTED_MODULE_4__["FileInput"].fieldConfigToProps(getFieldConfig(fieldIdAttr));
        var multiUploadText = '';

        if (fileProps.multiUploadText === false || fileProps.multiUploadText === null) {
          multiUploadText = strings.cf2FileField.defaultButtonText;
        } else {
          multiUploadText = fileProps.multiUploadText;
        }

        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Fields_FileInput__WEBPACK_IMPORTED_MODULE_4__["FileInput"], {
          onChange: onChange,
          field: field,
          shouldDisable: shouldDisable,
          isInvalid: isInvalid,
          describedById: captionId,
          message: fileProps.message,
          style: fileProps.style,
          inputProps: fileProps.inputProps,
          className: className,
          accept: fileProps.accept,
          usePreviews: fileProps.usePreviews,
          previewHeight: fileProps.previewHeight,
          previewWidth: fileProps.previewWidth,
          multiple: fileProps.multiple,
          multiUploadText: multiUploadText,
          strings: strings.cf2FileField,
          maxFileUploadSize: fileProps.maxFileUploadSize
        });

      case 'text':
      default:
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Fields_Input__WEBPACK_IMPORTED_MODULE_3__["Input"], {
          field: field,
          onChange: onChange,
          shouldDisable: shouldDisable,
          isInvalid: isInvalid,
          describedById: captionId,
          className: className
        });
    }
  };
  /**
   * Create error markup
   *
   * @since 1.8.0
   *
   * @param {*} message Message object -- {message: String, error: Bool }
   * @return {*}
   * @constructor
   */


  function Error(message) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", {
      className: "help-block caldera_ajax_error_block filled",
      "aria-live": "polite"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", {
      className: "parsley-required"
    }, message.message));
  }

  ;
  /**
   * Create error or non-error markup
   *
   * @since 1.8.0
   *
   * @param {*} message Message object -- {message: String, error: Bool }
   * @return {*}
   * @constructor
   */

  function ErrorOrNotice(message) {
    if (message.error) {
      return Error(message);
    }

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", {
      className: "help-block ",
      "aria-live": "polite"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, message.message));
  }
  /**
   * Displays field required indicator
   *
   * @since 1.8.0
   *
   * @return {*}
   * @constructor
   */


  function RequiredIndicator() {
    var requiredStyle = {
      color: '#ee0000'
    };
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", {
      "aria-hidden": "true",
      role: "presentation",
      className: "field_required",
      style: requiredStyle
    }, "*");
  }

  var className = 'form-group cf2-field-group';
  className = hasError ? className + ' has-error' : className;
  /**
   * Render CalderaFormsFieldGroup component
   *
   * @since 1.8.0
   */

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    className: className
  }, !hideLabel && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("label", {
    className: 'control-label',
    htmlFor: fieldIdAttr,
    id: "".concat(fieldIdAttr, "Label")
  }, fieldLabel, isRequired && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(RequiredIndicator, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Inside, null), hasCaption && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", {
    id: captionId,
    className: 'help-block'
  }, field.caption), isInvalid && Error(message), hasMessage && ErrorOrNotice(message));
};
/**
 * Prop Type definitions for CalderaFormsFieldGroup component
 *
 * @since 1.8.0
 *
 * @type {{field: *, onChange: (e|*), shouldShow: *, shouldDisable: *}}
 */

CalderaFormsFieldGroup.propTypes = {
  field: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape(_CalderaFormsFieldRender__WEBPACK_IMPORTED_MODULE_2__["CalderaFormsFieldPropType"]),
  onChange: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,
  shouldShow: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  hideLabel: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  shouldDisable: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  hasMessage: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  isInvalid: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  message: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({
    error: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    message: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string
  }),
  getFieldConfig: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,
  strings: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object
};
/**
 * Default props for the CalderaFormsFieldGroup component
 *
 * @since 1.8.0
 *
 * @type {{shouldShow: boolean, shouldDisable: boolean, fieldValue: string}}
 */

CalderaFormsFieldGroup.defaultProps = {
  shouldShow: true,
  shouldDisable: false,
  hideLabel: false,
  fieldValue: '',
  isInvalid: false,
  message: {
    error: false,
    message: ''
  }
};

/***/ }),

/***/ "./clients/render/components/CalderaFormsFieldRender.js":
/*!**************************************************************!*\
  !*** ./clients/render/components/CalderaFormsFieldRender.js ***!
  \**************************************************************/
/*! exports provided: CalderaFormsFieldRender, CalderaFormsFieldPropType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalderaFormsFieldRender", function() { return CalderaFormsFieldRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalderaFormsFieldPropType", function() { return CalderaFormsFieldPropType; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _RenderComponentViaPortal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RenderComponentViaPortal */ "./clients/render/components/RenderComponentViaPortal.js");
/* harmony import */ var _CalderaFormsFieldGroup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CalderaFormsFieldGroup */ "./clients/render/components/CalderaFormsFieldGroup.js");




/**
 * Render a Caldera Forms v2 field via a RenderComponentViaPortal to an element inside a Caldera Forms v1 field
 *
 * @since 1.8.0
 *
 * @param props
 * @return {*}
 * @constructor
 */

var CalderaFormsFieldRender = function CalderaFormsFieldRender(props) {
  var field = props.field,
      onChange = props.onChange,
      shouldDisable = props.shouldDisable,
      shouldShow = props.shouldShow,
      getFieldConfig = props.getFieldConfig,
      message = props.message,
      hasMessage = props.hasMessage,
      strings = props.strings;
  var type = field.type,
      outterIdAttr = field.outterIdAttr;

  if (!shouldShow) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0__["Fragment"], null);
  }

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0__["Fragment"], null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_RenderComponentViaPortal__WEBPACK_IMPORTED_MODULE_2__["RenderComponentViaPortal"], {
    domNode: document.getElementById(outterIdAttr),
    key: outterIdAttr
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_CalderaFormsFieldGroup__WEBPACK_IMPORTED_MODULE_3__["CalderaFormsFieldGroup"], {
    field: field,
    onChange: onChange,
    shouldShow: shouldShow,
    shouldDisable: shouldDisable,
    getFieldConfig: getFieldConfig,
    message: message,
    hasMessage: hasMessage,
    strings: strings
  })));
};
/**
 * Prop Type describing a Caldera Forms field
 *
 * @since 1.8.0
 */

var CalderaFormsFieldPropType = prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({
  type: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,
  outterIdAttr: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,
  fieldId: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,
  fieldIdAttr: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,
  fieldLabel: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,
  fieldCaption: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,
  isRequired: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object]),
  fieldPlaceHolder: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,
  fieldDefault: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  fieldValue: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array])
});
/**
 * Prop Type definitions for CalderaFormsFieldRender component
 *
 * @since 1.8.0
 *
 * @type {{field: *, onChange: (e|*), shouldShow: *, shouldDisable: *}}
 */

CalderaFormsFieldRender.propTypes = {
  field: CalderaFormsFieldPropType,
  onChange: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,
  shouldShow: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  shouldDisable: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  getFieldConfig: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,
  message: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({
    error: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    message: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string
  }),
  strings: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object
};
/**
 * Default props for the CalderaFormsFieldRender component
 *
 * @since 1.8.0
 *
 * @type {{shouldShow: boolean, shouldDisable: boolean, fieldValue: string}}
 */

CalderaFormsFieldRender.defaultProps = {
  shouldShow: true,
  shouldDisable: false,
  fieldValue: '',
  message: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({
    error: false,
    message: 'f!'
  })
};

/***/ }),

/***/ "./clients/render/components/CalderaFormsRender.js":
/*!*********************************************************!*\
  !*** ./clients/render/components/CalderaFormsRender.js ***!
  \*********************************************************/
/*! exports provided: shouldShowKey, shouldDisableKey, CalderaFormsRender */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldShowKey", function() { return shouldShowKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldDisableKey", function() { return shouldDisableKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalderaFormsRender", function() { return CalderaFormsRender; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _CalderaFormsFieldRender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CalderaFormsFieldRender */ "./clients/render/components/CalderaFormsFieldRender.js");
/* harmony import */ var validator_lib_isEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! validator/lib/isEmpty */ "./node_modules/validator/lib/isEmpty.js");
/* harmony import */ var validator_lib_isEmpty__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(validator_lib_isEmpty__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util */ "./clients/render/util.js");
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





 //Collection of change handlers to prevent re-creating

var handlers = {}; //Collection of cfState.events functions that subscribe to changes to prevent re-creating

var stateChangeSubscriptions = {};
var conditionalEventSubscriptions = {};
/**
 * Create a state key for a field's show/hide status
 *
 * This key of CalderaFormsRender.state will indicate if a field should be shown or not, based on conditional logic.
 *
 * @since 1.8.0
 *
 * @param fieldIdAttr
 * @return {string}
 */

var shouldShowKey = function shouldShowKey(fieldIdAttr) {
  return "shouldShow".concat(fieldIdAttr);
};
/**
 * Create a state key for a field's disable/enable status
 *
 *  This key of CalderaFormsRender.state will indicate if a field should be disabled or not, based on conditional logic.
 *
 * @since 1.8.0
 *
 * @param fieldIdAttr
 * @return {string}
 */

var shouldDisableKey = function shouldDisableKey(fieldIdAttr) {
  return "shouldDisable".concat(fieldIdAttr);
};
/**
 * Create a state key for a field's disable/enable status
 *
 * This key of CalderaFormsRender.state will indicate if a field has changed for not.

 * @since 1.8.0
 *
 * @param fieldIdAttr
 * @return {string}
 */

var fieldIsDirtyKey = function fieldIsDirtyKey(fieldIdAttr) {
  return "isDirty".concat(fieldIdAttr);
};
/**
 * Handles rendering fo Caldera Forms v2 fields inside of a Caldera Form v1
 *
 * @since 1.8.0
 */


var CalderaFormsRender = /*#__PURE__*/function (_Component) {
  _inherits(CalderaFormsRender, _Component);

  var _super = _createSuper(CalderaFormsRender);

  /**
   * Create CalderaFormsRender component
   *
   * @since 1.8.0
   *
   * @param props
   */
  function CalderaFormsRender(props) {
    var _this;

    _classCallCheck(this, CalderaFormsRender);

    _this = _super.call(this, props);
    var fieldValues = {};
    props.fieldsToControl.forEach(function (field) {
      var type = field.type,
          fieldId = field.fieldId,
          fieldDefault = field.fieldDefault,
          fieldIdAttr = field.fieldIdAttr;
      fieldValues[fieldIdAttr] = fieldDefault;
      fieldValues[shouldShowKey(fieldIdAttr)] = field.hasOwnProperty('shouldShow') && false === field.shouldShow ? false : true;
      fieldValues[shouldDisableKey(fieldIdAttr)] = field.hasOwnProperty('shouldDisable') && true === field.shouldDisable ? true : false;
      fieldValues[fieldIsDirtyKey(fieldIdAttr)] = false;
    });
    _this.state = _objectSpread({}, fieldValues, {
      messages: props.messages || {},
      valuesValidity: props.valuesValidity || {}
    });
    _this.setFieldValue = _this.setFieldValue.bind(_assertThisInitialized(_this));
    _this.setFieldShouldShow = _this.setFieldShouldShow.bind(_assertThisInitialized(_this));
    _this.setFieldShouldDisable = _this.setFieldShouldDisable.bind(_assertThisInitialized(_this));
    _this.subscribe = _this.subscribe.bind(_assertThisInitialized(_this));
    _this.getFieldConfig = _this.getFieldConfig.bind(_assertThisInitialized(_this));
    _this.addFieldMessage = _this.addFieldMessage.bind(_assertThisInitialized(_this));
    _this.checkFieldValues = _this.checkFieldValues.bind(_assertThisInitialized(_this));
    return _this;
  }
  /**
   * Get instance of CF State
   *
   * @since 1.8.0
   *
   * @return {Object}
   */


  _createClass(CalderaFormsRender, [{
    key: "getCfState",
    value: function getCfState() {
      return this.props.cfState;
    }
    /**
     * Get the current value of a field from CF State
     *
     * @since 1.8.0
     *
     * @param {String} fieldIdAttr The field's id attribute (not field ID, html id attribute)
     * @return {*}
     */

  }, {
    key: "getFieldValue",
    value: function getFieldValue(fieldIdAttr) {
      return this.getCfState().getState(fieldIdAttr);
    }
    /**
     * Get all fields values
     *
     * @since 1.8.0
     *
     * @return {*}
     */

  }, {
    key: "getAllFieldValues",
    value: function getAllFieldValues() {
      var _this2 = this;

      var fieldsToControl = this.props.fieldsToControl;

      var pickArray = function pickArray(array, key) {
        return array.reduce(function (accumualtor, item) {
          return accumualtor.concat([item[key]]);
        }, []);
      };

      var fieldIds = pickArray(fieldsToControl, 'fieldIdAttr');
      var values = {};
      Object.keys(this.state).map(function (key) {
        if (fieldIds.includes(key)) {
          var fieldId = fieldsToControl.find(function (field) {
            return key === field.fieldIdAttr;
          }).fieldId;
          values[fieldId] = _this2.state[key];
        }
      });
      return values;
    }
    /**
     * Set a field show or hide
     *
     * @since 1.8.0
     *
     * @param {String} fieldIdAttr The field's id attribute (not field ID, html id attribute)
     * @param {boolean} show If field should be shown (true) or hidden (false).
     */

  }, {
    key: "setFieldShouldShow",
    value: function setFieldShouldShow(fieldIdAttr, show, fieldValue) {
      var key = shouldShowKey(fieldIdAttr);
      var state = this.state;

      if (state[key] !== show) {
        var update = _defineProperty({}, key, show);

        if (show) {
          update[fieldIdAttr] = fieldValue;
          this.getCfState().mutateState(fieldIdAttr, fieldValue);
        }

        this.setState(_defineProperty({}, key, show));
      }
    }
    /**
     * Get the field config, by fieldIdAttr
     *
     * @since 1.8.0
     *
     * @param {string} fieldIdAttr
     * @return {*}
     */

  }, {
    key: "getFieldConfig",
    value: function getFieldConfig(fieldIdAttr) {
      return Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFieldConfigBy"])(this.props.fieldsToControl, 'fieldIdAttr', fieldIdAttr);
    }
    /**
     * Set a field  disabled or enabled
     *
     * @since 1.8.0
     *
     * @param {String} fieldIdAttr The field's id attribute (not field ID, html id attribute)
     * @param {boolean} disable If field should be enabled (true) or disabled (false).
     */

  }, {
    key: "setFieldShouldDisable",
    value: function setFieldShouldDisable(fieldIdAttr, disable) {
      var key = shouldDisableKey(fieldIdAttr);

      if (this.state[key] !== disable) {
        this.setState(_defineProperty({}, key, disable));
      }
    }
    /**
     * Set a field's value
     *
     * NOTE: Set 3rd arg true when updating internally. Set 3rd arg false when reciving update from CFState
     *
     * @since 1.8.0
     *
     * @param {String} fieldIdAttr The field's id attribute (not field ID, html id attribute)
     * @param {String|Number|null|boolean|Array} newValue
     * @param {boolean} bubbleUp Optional. If true, the default, the new value is dispatched to CFState. If false it is not.
     */

  }, {
    key: "setFieldValue",
    value: function setFieldValue(fieldIdAttr, newValue) {
      var _this$setState3;

      var bubbleUp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var isDirty = newValue !== this.state[fieldIdAttr];
      this.setState((_this$setState3 = {}, _defineProperty(_this$setState3, fieldIdAttr, newValue), _defineProperty(_this$setState3, fieldIsDirtyKey(fieldIdAttr), isDirty), _this$setState3));

      if (this.state.messages.hasOwnProperty(fieldIdAttr)) {
        this.setState({
          messages: _objectSpread({}, this.state.messages, _defineProperty({}, fieldIdAttr, {
            error: false,
            message: ''
          }))
        });
      }

      if (bubbleUp) {
        this.getCfState().mutateState(fieldIdAttr, newValue);
      } //Update valuesValidity state


      this.checkFieldValues(fieldIdAttr, newValue);
    }
    /**
     * Get (or create) change handler for field
     *
     * @since 1.8.0
     *
     * @param {String} fieldIdAttr The field's id attribute (not field ID, html id attribute)
     * @return {*}
     */

  }, {
    key: "getHandler",
    value: function getHandler(fieldIdAttr) {
      var _this3 = this;

      if (!handlers.hasOwnProperty(fieldIdAttr)) {
        switch (this.getFieldConfig(fieldIdAttr).type) {
          case 'file':
            handlers[fieldIdAttr] = function (accepted, rejected) {
              var fieldValue = _this3.getFieldValue(fieldIdAttr);

              var fieldConfig = _this3.getFieldConfig(fieldIdAttr);

              var fieldId = fieldConfig.fieldId;
              var cf2ProcessElements = ["uploadStarted", "pending", "fieldsBlocking"];
              cf2ProcessElements.forEach(function (element) {
                if (!cf2.hasOwnProperty(element)) {
                  cf2[element] = [];
                }
              });

              if (Array.isArray(accepted) && Array.isArray(rejected)) {
                // Handle accepted and rejected files
                if (!Array.isArray(fieldValue)) {
                  fieldValue = [];
                } //Set all accepted files in fieldValue and check if all field values are valid to removeFieldFromBlocking


                if (accepted.length > 0) {
                  accepted.forEach(function (file) {
                    fieldValue.push(file);
                  });

                  _this3.setFieldValue(fieldIdAttr, fieldValue);

                  if (_this3.checkFieldValues(fieldIdAttr, fieldValue).valid) {
                    Object(_util__WEBPACK_IMPORTED_MODULE_4__["removeFromBlocking"])(fieldId, cf2, fieldConfig);
                  }
                } //Set all rejected files in fieldValue and setBlocking


                if (rejected.length > 0) {
                  rejected.forEach(function (file) {
                    fieldValue.push(file);
                  });

                  _this3.setFieldValue(fieldIdAttr, fieldValue);

                  Object(_util__WEBPACK_IMPORTED_MODULE_4__["setBlocking"])(fieldId, cf2, fieldConfig);
                }
              } else if (_typeof(accepted) === 'object' && accepted.target.className === "cf2-file-remove") {
                //Remove a File form fieldValue
                //Remove file from fieldValue and check if all field values are valid to removeFieldFromBlocking
                //accepted is event and rejected is the file
                var index = fieldValue.indexOf(rejected);

                if (-1 < index) {
                  fieldValue.splice(index, 1);
                }

                if (_this3.checkFieldValues(fieldIdAttr, fieldValue).valid) {
                  Object(_util__WEBPACK_IMPORTED_MODULE_4__["removeFromBlocking"])(fieldId, cf2, fieldConfig);
                }

                _this3.setFieldValue(fieldIdAttr, fieldValue);
              }
            };

            break;

          default:
            handlers[fieldIdAttr] = function (event) {
              return _this3.setFieldValue(fieldIdAttr, event.target.value);
            };

            break;
        }
      }

      return handlers[fieldIdAttr];
    }
    /**
     * Subscribe to changes in CF State
     *
     * @since 1.8.0
     *
     * @param {String} fieldIdAttr The field's id attribute (not field ID, html id attribute)
     */

  }, {
    key: "subscribe",
    value: function subscribe(fieldIdAttr) {
      var _this4 = this;

      var state = this.state,
          props = this.props;
      var fieldConfig = this.getFieldConfig(fieldIdAttr);
      var fieldId = fieldConfig.fieldId;

      if (!stateChangeSubscriptions.hasOwnProperty(fieldIdAttr)) {
        stateChangeSubscriptions[fieldIdAttr] = this.getCfState().events().subscribe(fieldIdAttr, function (newValue, fieldIdAttr) {
          return _this4.setFieldValue(fieldIdAttr, newValue, false);
        });
      }

      var conditionalEvents = ['show', 'hide', 'enable', 'disable'];
      var _this$props = this.props,
          formId = _this$props.formId,
          formIdAttr = _this$props.formIdAttr;

      if (!conditionalEventSubscriptions.hasOwnProperty(fieldIdAttr)) {
        conditionalEventSubscriptions[fieldIdAttr] = {};
      }

      conditionalEvents.forEach(function (conditionalEvent) {
        if (!conditionalEventSubscriptions[fieldIdAttr].hasOwnProperty(conditionalEvent)) {
          conditionalEventSubscriptions[fieldIdAttr][conditionalEvent] = _this4.getCfState().events().attatchEvent("cf.conditionals.".concat(conditionalEvent), function (eventData, eventName) {
            if (formIdAttr === eventData.formIdAttr) {
              var eventType = eventData.eventType,
                  _fieldIdAttr = eventData.fieldIdAttr;
              var fieldValue = eventData.fieldValue;

              if (typeof fieldValue === 'undefined') {
                var values = _this4.getAllFieldValues();

                fieldValue = values[fieldId];
              }

              switch (eventType) {
                case 'hide':
                  _this4.setFieldShouldShow(_fieldIdAttr, false, fieldValue);

                  break;

                case 'show':
                  _this4.setFieldShouldShow(_fieldIdAttr, true, fieldValue);

                  break;

                case 'enable':
                  _this4.setFieldShouldDisable(_fieldIdAttr, false);

                  break;

                case 'disable':
                  _this4.setFieldShouldDisable(_fieldIdAttr, true);

                  break;

                default:
                  break;
              }
            }
          });
        }
      });
    }
    /**
     * Check if a field is required
     *
     * @since 1.8.0
     *
     * @param {string} fieldIdAttr
     *
     * @return {boolean}
     */

  }, {
    key: "isFieldRequired",
    value: function isFieldRequired(fieldIdAttr) {
      var field = this.getFieldConfig(fieldIdAttr);
      return !!field.isRequired;
    }
    /**
     * Check if a field is valid
     *
     * @since 1.8.0
     *
     * @param {string} fieldIdAttr
     *
     * @return {boolean}
     */

  }, {
    key: "isFieldValid",
    value: function isFieldValid(fieldIdAttr) {
      if (!this.isFieldRequired(fieldIdAttr)) {
        return true;
      }

      var value = this.state[fieldIdAttr];

      if (Array.isArray(value)) {
        return 0 < value.length;
      }

      return !validator_lib_isEmpty__WEBPACK_IMPORTED_MODULE_3___default()(value);
    }
    /**
     * Set messages using state for error
     *
     * @since 1.8.0
     *
     * @param {string} fieldIdAttr
     * @param {string} messageText text of the message
     * @param {boolean} isError status of message is error or not
     * @param {string} context for the current message to happen / be displayed
     *
     * @return {Object}
     */

  }, {
    key: "addFieldMessage",
    value: function addFieldMessage(fieldIdAttr, messageText) {
      var isError = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'unknown';

      if (!this.getFieldConfig(fieldIdAttr)) {
        return;
      }

      this.setState({
        messages: _objectSpread({}, this.state.messages, _defineProperty({}, fieldIdAttr, {
          message: messageText,
          error: isError,
          context: context
        }))
      });
    }
    /**
    * Get translatable strings Set in Caldera_Forms_Render_Assets::enqueue_form_assets()
    *
    * @since 1.8.0
    *
    * @return {Object}
    */

  }, {
    key: "getStrings",
    value: function getStrings() {
      return this.props.strings;
    }
    /**
     * //Check validity of all values set on a field depending on the field type
     *
     * @since 1.8.0
     *
     * @param {string} fieldIdAttr
     * @param {array} fieldValue
     *
     * @return {object} with this object.valid being a boolean indicating validity of all values
     */

  }, {
    key: "checkFieldValues",
    value: function checkFieldValues(fieldIdAttr, fieldValue) {
      if (!this.getFieldConfig(fieldIdAttr)) {
        return {
          "valid": false
        };
      } //Get Field Config and values


      var fieldConfig = this.getFieldConfig(fieldIdAttr);

      if (typeof fieldValue === "undefined") {
        fieldValue = this.getFieldValue(fieldIdAttr);
      } //Declare a default fieldValuesState variable


      var fieldValuesState = {
        "valid": true,
        "validValues": [],
        "invalidValues": []
      }; //Only check validity of values if at least a value is set

      if (fieldValue !== null && fieldValue.length > 0) {
        //Check validity of the field depending on the type of field
        switch (this.getFieldConfig(fieldIdAttr).type) {
          case 'file':
            var maxSize = fieldConfig.configOptions.maxFileUploadSize;
            var allowedTypes = [];

            if (typeof fieldConfig.configOptions.allowedTypes === "string") {
              allowedTypes = fieldConfig.configOptions.allowedTypes.split(',');
            }

            fieldValue.forEach(function (file) {
              //Check that each values respect field settings
              var invalidSize = file.size > maxSize && maxSize > 0;
              var invalidType = allowedTypes.length > 0 && allowedTypes.indexOf(file.type) < 0;

              if (invalidSize || invalidType) {
                fieldValuesState.invalidValues.push([file]);
              } else {
                fieldValuesState.validValues.push([file]);
              }
            });
            break;

          default:
            fieldValue.forEach(function (value) {
              fieldValuesState.validValues.push([value]);
            });
            break;
        } //Set the valid parameter inside fieldValuesState depending on fieldValuesState.invalidValues length


        fieldValuesState.valid = fieldValuesState.invalidValues.length <= 0;
      }

      this.setState({
        valuesValidity: _objectSpread({}, this.state.valuesValidity, _defineProperty({}, fieldIdAttr, fieldValuesState))
      });
      return fieldValuesState;
    }
    /**
     * Check field's hideLabel option
     *
     * @since 1.8.3
     *
     * @param {string} fieldIdAttr
     *
     * @return {boolean}
     */

  }, {
    key: "isFieldHideLabel",
    value: function isFieldHideLabel(fieldIdAttr) {
      var field = this.getFieldConfig(fieldIdAttr);

      if ("undefined" !== typeof field.hideLabel) {
        return field.hideLabel;
      }
    }
    /** @inheritDoc */

  }, {
    key: "render",
    value: function render() {
      var _this5 = this;

      var state = this.state,
          props = this.props;
      var messages = state.messages,
          valuesValidity = state.valuesValidity;
      var fieldsToControl = props.fieldsToControl,
          shouldBeValidating = props.shouldBeValidating;
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0__["Fragment"], null, fieldsToControl.map(function (field) {
        var _field = field,
            type = _field.type,
            outterIdAttr = _field.outterIdAttr,
            fieldId = _field.fieldId,
            fieldLabel = _field.fieldLabel,
            fieldCaption = _field.fieldCaption,
            required = _field.required,
            fieldPlaceHolder = _field.fieldPlaceHolder,
            fieldDefault = _field.fieldDefault,
            fieldIdAttr = _field.fieldIdAttr;
        var isValuesValiditySet = 'object' === _typeof(valuesValidity) && valuesValidity.hasOwnProperty(fieldIdAttr);
        var areValuesValid = isValuesValiditySet ? valuesValidity[fieldIdAttr].valid : {
          valid: true
        };
        field = _objectSpread({}, field, {
          fieldValue: _this5.getFieldValue(fieldIdAttr),
          hideLabel: _this5.isFieldHideLabel(fieldIdAttr),
          areValuesValid: areValuesValid
        });
        var isInvalid = shouldBeValidating && !_this5.isFieldValid(fieldIdAttr);

        _this5.subscribe(fieldIdAttr);

        var props = {
          field: field,
          strings: _this5.getStrings(),
          onChange: _this5.getHandler(fieldIdAttr),
          shouldShow: state[shouldShowKey(fieldIdAttr)],
          shouldDisable: state[shouldDisableKey(fieldIdAttr)]
        };
        var hasMessage = 'object' === _typeof(messages) && messages.hasOwnProperty(fieldIdAttr);
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_CalderaFormsFieldRender__WEBPACK_IMPORTED_MODULE_2__["CalderaFormsFieldRender"], _extends({}, props, {
          key: outterIdAttr,
          isInvalid: isInvalid,
          getFieldConfig: _this5.getFieldConfig,
          message: hasMessage ? messages[fieldIdAttr] : {
            error: false,
            message: ''
          },
          hasMessage: hasMessage
        }));
      }));
    }
  }]);

  return CalderaFormsRender;
}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]);
/**
 * Default props for the CalderaFormsRender component
 *
 * @since 1.8.0
 *
 * @type {{cfState: (e|*), formId: (e|*), fieldsToControl: *}}
 */

CalderaFormsRender.propTypes = {
  cfState: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,
  formId: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,
  fieldsToControl: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(_CalderaFormsFieldRender__WEBPACK_IMPORTED_MODULE_2__["CalderaFormsFieldPropType"]),
  formIdAttr: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,
  shouldBeValidating: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool.isRequired,
  messages: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
  strings: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object
};

/***/ }),

/***/ "./clients/render/components/Fields/FileInput.js":
/*!*******************************************************!*\
  !*** ./clients/render/components/Fields/FileInput.js ***!
  \*******************************************************/
/*! exports provided: FileInput */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FileInput", function() { return FileInput; });
/* harmony import */ var _CalderaFormsFieldRender__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CalderaFormsFieldRender */ "./clients/render/components/CalderaFormsFieldRender.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "./clients/render/util.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_dropzone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-dropzone */ "./node_modules/react-dropzone/dist/es/index.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






/**
 * A FileInput
 *
 * @since 1.8.0
 *
 * @param props
 * @return {*}
 * @constructor
 */

var FileInput = function FileInput(props) {
  var maxFileUploadSize = props.maxFileUploadSize,
      onChange = props.onChange,
      accept = props.accept,
      field = props.field,
      style = props.style,
      className = props.className,
      multiUploadText = props.multiUploadText,
      multiple = props.multiple,
      inputProps = props.inputProps,
      usePreviews = props.usePreviews,
      previewHeight = props.previewHeight,
      previewWidth = props.previewWidth,
      strings = props.strings;
  var shouldDisable = props.shouldDisable;
  var fieldId = field.fieldId,
      fieldIdAttr = field.fieldIdAttr,
      fieldValue = field.fieldValue;
  var valueSet = typeof fieldValue !== "undefined" && fieldValue.length > 0;
  var removeFileID = fieldIdAttr + '_file_';
  var buttonControls = fieldIdAttr + ', cf2-list-files';
  var cf2ListFilesID = 'cf2-list-files-' + fieldIdAttr;
  inputProps.id = fieldIdAttr;

  if (valueSet && !multiple) {
    shouldDisable = true;
    inputProps.disabled = true;
  }

  var acceptedTypes = [];

  if (typeof accept === "string") {
    acceptedTypes = accept.split(',');
  }

  var progressId = "file-progress" + fieldIdAttr;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
    className: "cf2-dropzone"
  }, valueSet && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("ul", {
    id: cf2ListFilesID,
    className: "cf2-list-files",
    role: "list"
  }, fieldValue.map(function (file, index) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("li", {
      id: removeFileID + index,
      key: index,
      className: "cf2-file-listed",
      role: "listitem",
      "aria-posinset": index
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
      className: "cf2-file-control"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("button", {
      type: "button",
      "aria-controls": removeFileID + index,
      "data-file": removeFileID + index,
      className: "cf2-file-remove",
      onClick: function onClick(e) {
        return onChange(e, file);
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("span", {
      className: "screen-reader-text sr-text"
    }, strings.removeFile)), usePreviews === true && file.type.startsWith("image") === true ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("img", {
      className: "cf2-file-field-img-preview",
      width: previewWidth,
      height: previewHeight,
      src: file.preview,
      alt: file.name
    }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("span", {
      className: "cf2-file-name file-name"
    }, file.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("progress", {
      id: progressId,
      className: "cf2-file-progress-bar",
      value: "0",
      max: "100"
    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
      className: "cf2-file-extra-data"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("small", {
      className: "cf2-file-data file-type"
    }, " ", file.type), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("small", {
      className: "cf2-file-data file-size"
    }, " - ", Object(_util__WEBPACK_IMPORTED_MODULE_1__["sizeFormat"])(file.size), " "), maxFileUploadSize > 0 && maxFileUploadSize < file.size && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("small", {
      className: "cf2-file-error file-error file-size-error help-block"
    }, " ", strings.maxSizeAlert + Object(_util__WEBPACK_IMPORTED_MODULE_1__["sizeFormat"])(maxFileUploadSize), " "), acceptedTypes.indexOf(file.type) <= -1 && accept !== false && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("small", {
      className: "cf2-file-error file-error file-type-error help-block"
    }, " ", strings.wrongTypeAlert + accept, " ")));
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react_dropzone__WEBPACK_IMPORTED_MODULE_4__["default"], {
    onDrop: onChange,
    className: className,
    accept: 'string' === typeof accept ? accept : '',
    maxSize: 'number' === typeof maxFileUploadSize && maxFileUploadSize > 0 ? maxFileUploadSize : Infinity,
    style: style,
    disabled: shouldDisable,
    inputProps: _objectSpread({}, inputProps, {
      'data-field': fieldId
    }),
    disableClick: shouldDisable,
    multiple: multiple
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("button", {
    type: "button",
    className: "btn btn-block",
    "aria-controls": buttonControls,
    "aria-expanded": valueSet,
    disabled: shouldDisable
  }, multiUploadText)));
};
/**
 * Prop definitions for FileInput component
 *
 * @since 1.8.0
 *
 * @type {{field: *, onChange: (e|*), shouldDisable: *, isInvalid: *, describedById: *, multiple: *, text: *, multiUploadText: *, message: *, style: *, previewStyle: *, inputProps: *, className: *, accept: *}}
 */

FileInput.propTypes = {
  field: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.shape(_CalderaFormsFieldRender__WEBPACK_IMPORTED_MODULE_0__["CalderaFormsFieldPropType"]),
  onChange: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func,
  shouldDisable: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.bool,
  isInvalid: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.bool,
  describedById: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,
  multiple: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.bool, prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number]),
  text: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.object,
  multiUploadText: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.bool, prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string]),
  message: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.shape({
    error: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.bool,
    message: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string
  }),
  style: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.object,
  usePreviews: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.bool, prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string]),
  previewWidth: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number,
  previewHeight: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number,
  inputProps: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.object,
  className: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,
  accept: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.bool, prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string]),
  isRequired: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.bool, prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.object])
};
/**
 * Default props for a FileInput component
 *
 * @since 1.8.0
 *
 * @type {{message: {error: boolean, message: string}, text: {buttonText: string, removeFile: string}, multiUploadText: string, inputProps: {type: string}, disableClick: boolean, multiple: boolean, className: string, previewStyle: {height: string, width: string}}}
 */

FileInput.defaultProps = {
  message: {
    error: false,
    message: ''
  },
  inputProps: {
    type: 'file',
    disabled: 'false'
  },
  disableClick: false,
  className: 'cf2-file form-control'
};
/**
 * Prepare a field's config to be used as props for FileInput component
 *
 * @since 1.8.0
 *
 * @param {*} fieldConfig The field's configuration
 *
 * @return {{field: *}}
 */

FileInput.fieldConfigToProps = function (fieldConfig) {
  var props = {
    field: fieldConfig
  };
  var configOptionProps = ['multiple', 'multiUploadText', 'maxFileUploadSize'];

  if (!props.field.hasOwnProperty('isRequired')) {
    props.field.isRequired = false;
  }

  if (fieldConfig.hasOwnProperty('configOptions')) {
    var configOptions = fieldConfig.configOptions;
    configOptionProps.forEach(function (key) {
      props[key] = configOptions[key];
    });

    if (configOptions.hasOwnProperty('allowedTypes')) {
      props.inputProps = {
        type: 'file',
        accept: configOptions.allowedTypes
      };
      props.accept = configOptions.allowedTypes;
    } else {
      props.accept = '';
    }

    if (fieldConfig.configOptions.hasOwnProperty('multiple')) {
      props.multiple = fieldConfig.configOptions.multiple === 1;
    } else {
      props.multiple = false;
    }

    if (configOptions.hasOwnProperty('usePreviews')) {
      if (configOptions.usePreviews === true) {
        props.usePreviews = true;
        props.previewWidth = configOptions.previewWidth;
        props.previewHeight = configOptions.previewHeight;
      } else {
        props.usePreviews = false;
      }
    }

    if (configOptions.hasOwnProperty('maxFileUploadSize')) {
      props.maxFileUploadSize = configOptions.maxFileUploadSize;
    }
  }

  return props;
};

/***/ }),

/***/ "./clients/render/components/Fields/Input.js":
/*!***************************************************!*\
  !*** ./clients/render/components/Fields/Input.js ***!
  \***************************************************/
/*! exports provided: Input */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Input", function() { return Input; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _CalderaFormsFieldGroup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../CalderaFormsFieldGroup */ "./clients/render/components/CalderaFormsFieldGroup.js");
/* harmony import */ var _CalderaFormsFieldRender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../CalderaFormsFieldRender */ "./clients/render/components/CalderaFormsFieldRender.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }





/**
 * Input component
 *
 * @since 1.8.0
 *
 * @param props
 * @return {*}
 * @constructor
 */

var Input = function Input(props) {
  var shouldDisable = props.shouldDisable,
      field = props.field,
      describedById = props.describedById,
      onChange = props.onChange;
  var type = field.type,
      outterIdAttr = field.outterIdAttr,
      fieldId = field.fieldId,
      fieldLabel = field.fieldLabel,
      fieldCaption = field.fieldCaption,
      required = field.required,
      fieldPlaceHolder = field.fieldPlaceHolder,
      fieldDefault = field.fieldDefault,
      fieldValue = field.fieldValue,
      fieldIdAttr = field.fieldIdAttr,
      isInvalid = field.isInvalid;
  var propsThatDoNotUseAnEquals = {};

  if (shouldDisable) {
    propsThatDoNotUseAnEquals.disabled = true;
  } else {
    propsThatDoNotUseAnEquals.disabled = false;
  }

  if (required) {
    propsThatDoNotUseAnEquals.required = true;
  } else {
    propsThatDoNotUseAnEquals.required = false;
  }

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("input", _extends({
    type: type
  }, propsThatDoNotUseAnEquals, {
    "aria-describedby": describedById,
    value: fieldValue,
    className: 'cf2-text form-control',
    id: fieldIdAttr,
    placeholder: fieldPlaceHolder,
    onChange: onChange,
    "data-field": fieldId,
    "data-type": 'cf2-text',
    name: fieldId
  }));
};
/**
 * Prop definitions for Input component
 *
 * @since 1.8.0
 *
 * @type {{field: *, onChange: (e|*), shouldDisable: *, isInvalid: *, describedById: *}}
 */

Input.propTypes = {
  field: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.shape(_CalderaFormsFieldRender__WEBPACK_IMPORTED_MODULE_2__["CalderaFormsFieldPropType"]),
  onChange: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func.isRequired,
  shouldDisable: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.bool,
  isInvalid: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.bool,
  describedById: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string
};
/**
 * Default props for Input component
 *
 * @since 1.8.0
 *
 * @type {{ariaAttr: string, isInvalid: boolean}}
 */

Input.defaultProps = {
  ariaAttr: '',
  isInvalid: false
};

/***/ }),

/***/ "./clients/render/components/RenderComponentViaPortal.js":
/*!***************************************************************!*\
  !*** ./clients/render/components/RenderComponentViaPortal.js ***!
  \***************************************************************/
/*! exports provided: RenderComponentViaPortal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderComponentViaPortal", function() { return RenderComponentViaPortal; });
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);


/**
 * Render children using a Portal
 *
 * @see https://reactjs.org/docs/portals.html
 *
 * @since 1.8.0
 *
 * @param props
 * @return {{$$typeof, key, children, containerInfo, implementation}}
 * @constructor
 */

var RenderComponentViaPortal = function RenderComponentViaPortal(props) {
  var children = props.children,
      domNode = props.domNode;
  return react_dom__WEBPACK_IMPORTED_MODULE_0___default.a.createPortal(children, domNode);
};
/**
 * Prop type definitions for a RenderComponentViaPortal component
 *
 * @type {{children: (e|*), domNode: (e|*)}}
 */

RenderComponentViaPortal.propTypes = {
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.any.isRequired,
  domNode: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.instanceOf(Element).isRequired
};

/***/ }),

/***/ "./clients/render/fileUploads.js":
/*!***************************************!*\
  !*** ./clients/render/fileUploads.js ***!
  \***************************************/
/*! exports provided: processFormSubmit, handleFileUploadResponse, handleFileUploadError, hashAndUpload, processFiles, processFileField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "processFormSubmit", function() { return processFormSubmit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "handleFileUploadResponse", function() { return handleFileUploadResponse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "handleFileUploadError", function() { return handleFileUploadError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hashAndUpload", function() { return hashAndUpload; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "processFiles", function() { return processFiles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "processFileField", function() { return processFileField; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./clients/render/util.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }


/**
 * Trigger $form.submit when uploadCompleted length === all fields values length
 *
 * @since 1.8.0
 *
 * @param {integer} completed length of cf2.uploadCompleted
 * @param {object} processData holding {theComponent, $form, lastFile}
 *
 */

var processFormSubmit = function processFormSubmit(completed, processData) {
  var theComponent = processData.theComponent,
      $form = processData.$form,
      lastFile = processData.lastFile; //Deduct the length of all fields values

  var valuesLength = 0;

  for (var field in theComponent.state.valuesValidity) {
    valuesLength += theComponent.state.valuesValidity[field].validValues.length;
  } //Check if it matched the length of uploadCompleted


  var lastField = completed.length === valuesLength;

  if (lastFile && lastField) {
    $form.submit();
  }
};
/**
 * Manage response of file upload requests
 *
 * @since 1.8.0
 *
 * @param {object} response generated by hashFile() => createMediaFromFile()
 * @param {File} file being responded to
 * @param {object} processData holding {cf2,$form,field,strings,theComponent}
 * @param {object} processFunctions holds {handleFileUploadError}
 *
 */

var handleFileUploadResponse = function handleFileUploadResponse(response, file, processData, processFunctions) {
  var cf2 = processData.cf2,
      field = processData.field,
      strings = processData.strings,
      theComponent = processData.theComponent,
      lastFile = processData.lastFile;
  var handleFileUploadError = processFunctions.handleFileUploadError,
      processFormSubmit = processFunctions.processFormSubmit;
  var fieldId = field.fieldId;

  if ('object' !== _typeof(response)) {
    Object(_util__WEBPACK_IMPORTED_MODULE_0__["removeFromUploadStarted"])(fieldId, cf2);
    Object(_util__WEBPACK_IMPORTED_MODULE_0__["removeFromPending"])(fieldId, cf2);
    handleFileUploadError(strings.invalidFileResponse, file, strings, field.fieldIdAttr, theComponent, 'UnknownUploadError');
  } else if (response.hasOwnProperty('control')) {
    Object(_util__WEBPACK_IMPORTED_MODULE_0__["removeFromUploadStarted"])(fieldId, cf2);
    Object(_util__WEBPACK_IMPORTED_MODULE_0__["removeFromPending"])(fieldId, cf2);
    Object(_util__WEBPACK_IMPORTED_MODULE_0__["removeFromBlocking"])(fieldId, cf2, field);
    cf2.uploadCompleted.push(fieldId);

    if (lastFile) {
      processFormSubmit(cf2.uploadCompleted, processData, processFunctions);
    }
  } else {
    Object(_util__WEBPACK_IMPORTED_MODULE_0__["removeFromUploadStarted"])(fieldId, cf2);
    Object(_util__WEBPACK_IMPORTED_MODULE_0__["removeFromPending"])(fieldId, cf2);
    handleFileUploadError(response, file, strings, field.fieldIdAttr, theComponent);
  }
};
/**
 * Manage response of file upload failure
 *
 * @since 1.8.0
 *
 * @param {object} error generated by promise
 * @param {File} file blob
 * @param {object} strings Translatable strings of text (localized in enqueue_form_assets() => classes/render/assets.php)
 * @param {string} fieldIdAttr fieldIdAttr of the field we are processing the file for
 * @param {object} theComponent File field component rendered
 *
 */

var handleFileUploadError = function handleFileUploadError(error, file, strings, fieldIdAttr, theComponent) {
  //Stop spinner animation
  var formIdAttr = theComponent.props.formIdAttr;

  if (formIdAttr.length > 0) {
    Object(_util__WEBPACK_IMPORTED_MODULE_0__["processAnimation"])(formIdAttr, false);
  } //Display error message


  if (error.hasOwnProperty('message')) {
    theComponent.addFieldMessage(fieldIdAttr, error.message, true);
  } else {
    if (file.name) {
      var messageText = strings.fileUploadError1 + file.name + strings.fileUploadError2;
      theComponent.addFieldMessage(fieldIdAttr, messageText, true, 'fileNoErrorMessage');
    } else {
      theComponent.addFieldMessage(fieldIdAttr, 'unKnown Error', true, 'noFileUnknownError');
    }
  }
};
/**
 * Hash a file then upload it
 *
 * @since 1.8.0
 *
 * @param {File} file File blob
 * @param {object} processData object of data to process files {verify, field, fieldId, cf2, $form, CF_API_DATA, messages}
 * @param {object} processFunctions object of functions that will be called within processFiles then test the cases they are called {hashAndUpload, hashFile, createMediaFromFile, handleFileUploadResponse, handleFileUploadError}
 */

var hashAndUpload = function hashAndUpload(file, processData, processFunctions) {
  var verify = processData.verify,
      field = processData.field,
      CF_API_DATA = processData.CF_API_DATA,
      theComponent = processData.theComponent;
  var hashFile = processFunctions.hashFile,
      createMediaFromFile = processFunctions.createMediaFromFile,
      handleFileUploadResponse = processFunctions.handleFileUploadResponse,
      handleFileUploadError = processFunctions.handleFileUploadError;
  var API_FOR_FILES_URL = CF_API_DATA.rest.fileUpload;
  var _wp_nonce = CF_API_DATA.rest.nonce;
  var strings = CF_API_DATA.strings.cf2FileField;

  if (file instanceof File || file instanceof Blob) {
    hashFile(file, function (hash) {
      var additonalData = {
        hashes: [hash],
        verify: verify,
        formId: field.formId,
        fieldId: field.fieldId,
        control: field.control,
        _wp_nonce: _wp_nonce,
        API_FOR_FILES_URL: API_FOR_FILES_URL
      };
      createMediaFromFile(file, additonalData, fetch).then(function (response) {
        return response.json();
      }).then(function (response) {
        return handleFileUploadResponse(response, file, processData, processFunctions);
      }).catch(function (error) {
        handleFileUploadError(error, file, strings, field.fieldIdAttr, theComponent);
      });
    });
  }
};
/**
 * Trigger the process on array of files
 *
 * @since 1.8.0
 *
 * @param {array} files array of Files
 * @param {object} processData object of data to process files {verify, field, fieldId, cf2, $form, CF_API_DATA, messages}
 * @param {object} processFunctions object of functions that will be called within processFiles then test the cases they are called {hashAndUpload, hashFile, createMediaFromFile, handleFileUploadResponse, handleFileUploadError}
 */

var processFiles = function processFiles(files, processData, processFunctions) {
  var hashAndUpload = processFunctions.hashAndUpload,
      handleFileUploadError = processFunctions.handleFileUploadError;
  var field = processData.field,
      theComponent = processData.theComponent;
  var strings = processData.CF_API_DATA.strings.cf2FileField;
  files.forEach(function (file, index, array) {
    if (Array.isArray(file)) {
      file = file[0];
    }

    if (index === array.length - 1) {
      processData.lastFile = true;
    } else {
      processData.lastFile = false;
    }

    try {
      hashAndUpload(file, processData, processFunctions);
    } catch (error) {
      handleFileUploadError(error, file, strings, field.fieldIdAttr, theComponent);
    }
  });
};
/**
 * Pre-process Files by File field
 *
 * @since 1.8.0
 *
 * @param {object} processData object of data to process files {obj, values, field, fieldId, cf2, $form, CF_API_DATA, messages}
 * @param {object} processFunctions object of functions that will be called within processFiles then test the cases they are called {hashAndUpload, hashFile, createMediaFromFile, handleFileUploadResponse, handleFileUploadError}
 */

var processFileField = function processFileField(processData, processFunctions) {
  //Process files
  var processFiles = processFunctions.processFiles;
  var obj = processData.obj,
      values = processData.values,
      cf2 = processData.cf2,
      field = processData.field,
      fieldId = processData.fieldId,
      theComponent = processData.theComponent,
      CF_API_DATA = processData.CF_API_DATA;
  var fieldIdAttr = field.fieldIdAttr,
      isRequired = field.isRequired; //Start spinner animation

  if (isRequired) {
    if (!jQuery.isEmptyObject(theComponent.state.valuesValidity) && theComponent.state.valuesValidity[fieldIdAttr].valid) {
      Object(_util__WEBPACK_IMPORTED_MODULE_0__["processAnimation"])(obj.formIdAttr, true);
    }
  } else {
    Object(_util__WEBPACK_IMPORTED_MODULE_0__["processAnimation"])(obj.formIdAttr, true);
  }

  var strings = CF_API_DATA.strings.cf2FileField;
  var shouldBeValidating = false; //do not upload after complete

  if (cf2.uploadCompleted.includes(fieldId)) {
    Object(_util__WEBPACK_IMPORTED_MODULE_0__["removeFromPending"])(fieldId, cf2);
    Object(_util__WEBPACK_IMPORTED_MODULE_0__["removeFromBlocking"])(fieldId, cf2, field);
    return;
  } //do not start upload if it has started uploading


  if (-1 <= cf2.uploadStarted.indexOf(function (_fieldId) {
    return _fieldId === fieldId;
  }) && -1 <= cf2.pending.indexOf(function (_fieldId) {
    return _fieldId === fieldId;
  })) {
    cf2.uploadStarted.push(fieldId);
    obj.$form.data(fieldId, field.control);
    cf2.pending.push(fieldId);
    processData.verify = jQuery("#_cf_verify_".concat(field.formId)).val();

    if ('' === values[fieldId]) {
      if (theComponent.isFieldRequired(fieldIdAttr)) {
        theComponent.addFieldMessage(fieldIdAttr, strings.fieldIsRequired);
        shouldBeValidating = true;
        Object(_util__WEBPACK_IMPORTED_MODULE_0__["setBlocking"])(fieldId, cf2, field);
      }

      Object(_util__WEBPACK_IMPORTED_MODULE_0__["removeFromPending"])(fieldId, cf2);
      return;
    }

    Object(_util__WEBPACK_IMPORTED_MODULE_0__["removeFromBlocking"])(fieldId, cf2, field);
    var files = values[fieldId];
    processFiles(files, processData, processFunctions);
  }
};

/***/ }),

/***/ "./clients/render/index.js":
/*!*********************************!*\
  !*** ./clients/render/index.js ***!
  \*********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.scss */ "./clients/render/index.scss");
/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_index_scss__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_CalderaFormsRender__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/CalderaFormsRender */ "./clients/render/components/CalderaFormsRender.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/dom-ready */ "@wordpress/dom-ready");
/* harmony import */ var _wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util */ "./clients/render/util.js");
/* harmony import */ var _fileUploads__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fileUploads */ "./clients/render/fileUploads.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/** globals CF_API_DATA **/





var jQuery = window.jQuery;

 //Expect compatibility with wp versions older than 5.0.0

var domElement;

if ("undefined" === typeof wp.element) {
  Object.defineProperty(global.wp, 'element', {
    get: function get() {
      return react__WEBPACK_IMPORTED_MODULE_2___default.a;
    }
  });
  domElement = react_dom__WEBPACK_IMPORTED_MODULE_3___default.a;
} else {
  domElement = wp.element;
}

_wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_4___default()(function () {
  jQuery(document).on('cf.form.init', function (e, obj) {
    var state = obj.state,
        formId = obj.formId,
        idAttr = obj.idAttr;
    var fieldsToControl = [];

    if ('object' !== _typeof(window.cf2)) {
      window.cf2 = {};
    } //Build configurations


    document.querySelectorAll('.cf2-field-wrapper').forEach(function (fieldElement) {
      var fieldIdAttr = fieldElement.getAttribute('data-field-id');

      if ('undefined' !== typeof idAttr) {
        var formConfig = window.cf2[idAttr];

        if ('undefined' !== typeof formConfig) {
          var fieldConfig = formConfig.fields.hasOwnProperty(fieldIdAttr) ? formConfig.fields[fieldIdAttr] : null;

          if ('string' === typeof fieldConfig) {
            fieldConfig = JSON.parse(fieldConfig);
          }

          if (fieldConfig) {
            fieldsToControl.push(fieldConfig);

            if (fieldConfig.hasOwnProperty('fieldDefault')) {
              state.mutateState(fieldIdAttr, fieldConfig.fieldDefault);
            }
          }
        }
      }
    });
    /**
     * Flag to indicate if validation is happening or not
     *
     * This is controlled outside of React so that CF1 can trigger validation
     *
     * @since 1.8.0
     *
     * @type {boolean}
     */

    var shouldBeValidating = false;
    var messages = {};
    jQuery(document).on('cf.ajax.request', function (event, obj) {
      //do not run if component don't have values
      if (!theComponent || 'object' === _typeof(theComponent) && 'object' === _typeof(theComponent.getAllFieldValues()) && Object.keys(theComponent.getAllFieldValues()).length <= 0) {
        return;
      } //Compare the event form id with the component form id


      if (!obj.hasOwnProperty('formIdAttr') || obj.formIdAttr !== idAttr) {
        return;
      }

      shouldBeValidating = true;
      var values = theComponent.getAllFieldValues();
      var cf2 = window.cf2[obj.formIdAttr];

      if (typeof cf2 !== "undefined" && cf2.length > 0) {
        cf2.formIdAttr = obj.formIdAttr;
      }

      var displayFieldErrors = obj.displayFieldErrors,
          $notice = obj.$notice,
          $form = obj.$form,
          fieldsBlocking = obj.fieldsBlocking;

      if ('object' !== _typeof(cf2)) {
        return;
      }

      cf2.pending = cf2.pending || [];
      cf2.uploadStarted = cf2.uploadStarted || [];
      cf2.uploadCompleted = cf2.uploadCompleted || [];
      cf2.fieldsBlocking = cf2.fieldsBlocking || [];

      if (Object.keys(values).length) {
        Object.keys(values).forEach(function (fieldId) {
          var field = fieldsToControl.find(function (field) {
            return fieldId === field.fieldId;
          });

          if (field) {
            if ('file' === field.type) {
              var processFunctions = {
                processFiles: _fileUploads__WEBPACK_IMPORTED_MODULE_6__["processFiles"],
                hashAndUpload: _fileUploads__WEBPACK_IMPORTED_MODULE_6__["hashAndUpload"],
                hashFile: _util__WEBPACK_IMPORTED_MODULE_5__["hashFile"],
                createMediaFromFile: _util__WEBPACK_IMPORTED_MODULE_5__["createMediaFromFile"],
                handleFileUploadResponse: _fileUploads__WEBPACK_IMPORTED_MODULE_6__["handleFileUploadResponse"],
                handleFileUploadError: _fileUploads__WEBPACK_IMPORTED_MODULE_6__["handleFileUploadError"],
                processFormSubmit: _fileUploads__WEBPACK_IMPORTED_MODULE_6__["processFormSubmit"]
              };
              var processData = {
                obj: obj,
                values: values,
                field: field,
                fieldId: fieldId,
                cf2: cf2,
                $form: $form,
                CF_API_DATA: CF_API_DATA,
                theComponent: theComponent,
                messages: messages
              };
              Object(_fileUploads__WEBPACK_IMPORTED_MODULE_6__["processFileField"])(processData, processFunctions);
            }
          }
        });
      } else {
        if (typeof field !== "undefined") {
          obj.$form.data(field.fieldId, values[field.fieldId]);
        }
      }
    });
    /**
     * Ref for rendered app
     *
     * @see https://reactjs.org/docs/refs-and-the-dom.html
     *
     * @since 1.8.0
     * @type {*}
     */

    var theComponent = '';
    domElement.render( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_components_CalderaFormsRender__WEBPACK_IMPORTED_MODULE_1__["CalderaFormsRender"], {
      cfState: state,
      formId: formId,
      formIdAttr: idAttr,
      fieldsToControl: fieldsToControl,
      shouldBeValidating: shouldBeValidating,
      ref: function ref(component) {
        Object(_util__WEBPACK_IMPORTED_MODULE_5__["captureRenderComponentRef"])(component, idAttr, window);
        theComponent = component;
      },
      messages: messages,
      strings: CF_API_DATA.strings
    }), document.getElementById("cf2-".concat(idAttr)));
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./clients/render/index.scss":
/*!***********************************!*\
  !*** ./clients/render/index.scss ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./clients/render/util.js":
/*!********************************!*\
  !*** ./clients/render/util.js ***!
  \********************************/
/*! exports provided: getFieldConfigBy, hashFile, removeFromPending, removeFromUploadStarted, removeFromBlocking, setBlocking, createMediaFromFile, sizeFormat, setSubmitButtonState, getFormIdAttr, processAnimation, captureRenderComponentRef */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFieldConfigBy", function() { return getFieldConfigBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hashFile", function() { return hashFile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeFromPending", function() { return removeFromPending; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeFromUploadStarted", function() { return removeFromUploadStarted; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeFromBlocking", function() { return removeFromBlocking; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setBlocking", function() { return setBlocking; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMediaFromFile", function() { return createMediaFromFile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sizeFormat", function() { return sizeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setSubmitButtonState", function() { return setSubmitButtonState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFormIdAttr", function() { return getFormIdAttr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "processAnimation", function() { return processAnimation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "captureRenderComponentRef", function() { return captureRenderComponentRef; });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var SparkMD5 = __webpack_require__(/*! spark-md5 */ "./node_modules/spark-md5/spark-md5.js");

var getFieldConfigBy = function getFieldConfigBy(fieldConfigs, findBy, findWhere) {
  return fieldConfigs.find(function (field) {
    return findWhere === field[findBy];
  });
};
var hashFile = function hashFile(file, callback) {
  var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,
      chunkSize = 2097152,
      // Read in chunks of 2MB
  chunks = Math.ceil(file.size / chunkSize),
      currentChunk = 0,
      spark = new SparkMD5.ArrayBuffer(),
      fileReader = new FileReader();

  fileReader.onload = function (e) {
    spark.append(e.target.result); // Append array buffer

    currentChunk++;

    if (currentChunk < chunks) {
      loadNext();
    } else {
      callback(spark.end());
    }
  };

  fileReader.onerror = function () {
    console.warn('oops, something went wrong.');
  };

  function loadNext() {
    var start = currentChunk * chunkSize,
        end = start + chunkSize >= file.size ? file.size : start + chunkSize;
    fileReader.readAsArrayBuffer(blobSlice.call(file, start, end));
  }

  loadNext();
};
var removeFromPending = function removeFromPending(fieldId, cf2) {
  var index = cf2.pending.findIndex(function (item) {
    return item === fieldId;
  });

  if (-1 < index) {
    cf2.pending.splice(index, 1);
  }
};
var removeFromUploadStarted = function removeFromUploadStarted(fieldId, cf2) {
  var index = cf2.uploadStarted.findIndex(function (item) {
    return item === fieldId;
  });

  if (-1 < index) {
    cf2.uploadStarted.splice(index, 1);
  }
};
var removeFromBlocking = function removeFromBlocking(fieldId, cf2) {
  var fieldConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var index = cf2.fieldsBlocking.findIndex(function (item) {
    return item === fieldId;
  });

  if (-1 < index) {
    cf2.fieldsBlocking.splice(index, 1);
  }

  setSubmitButtonState(cf2, fieldConfig);
};
var setBlocking = function setBlocking(fieldId, cf2) {
  var fieldConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  removeFromUploadStarted(fieldId, cf2);
  removeFromPending(fieldId, cf2);

  if (cf2.fieldsBlocking.indexOf(fieldId) < 0) {
    cf2.fieldsBlocking.push(fieldId);
  }

  setSubmitButtonState(cf2, fieldConfig, false);
};
/**
 * Default process to convert a file to media
 *
 * @param file
 * @param additionalData
 * @param fetch
 * @return {*}
 */

var createMediaFromFile = function createMediaFromFile(file, additionalData, fetch) {
  // Create upload payload
  var data = new window.FormData();
  data.append('file', file, file.name || file.type.replace('/', '.'));
  data.append('title', file.name ? file.name.replace(/\.[^.]+$/, '') : file.type.replace('/', '.'));
  Object.keys(additionalData).forEach(function (key) {
    return data.append(key, additionalData[key]);
  });
  return fetch(additionalData.API_FOR_FILES_URL, {
    body: data,
    method: 'POST',
    headers: {
      'X-WP-Nonce': additionalData._wp_nonce
    }
  });
};
/**

 * Converts the bytes values to smaller value in corresponding unit
 *
 * @param bytes value to be converted
 * @return {*}
 */

var sizeFormat = function sizeFormat(bytes) {
  var converted = false;
  var quant = [{
    unit: 'TB',
    mag: 1099511627776
  }, {
    unit: 'GB',
    mag: 1073741824
  }, {
    unit: 'MB',
    mag: 1048576
  }, {
    unit: 'kB',
    mag: 1024
  }, {
    unit: 'B ',
    mag: 1
  }];
  quant.forEach(function (v) {
    if (parseFloat(bytes) >= v.mag && converted == false) {
      converted = bytes / v.mag;

      if (bytes > 1048576) {
        converted = converted.toFixed(2);
      } else {
        converted = Math.round(converted);
      }

      converted = converted + ' ' + v.unit;
    }
  });
  return converted;
};
/* Set Submit button state
 *
 * @param {object} cf2
 * @param {object} fieldConfig
 * @param {boolean} state
 * @return {*}
 */

var setSubmitButtonState = function setSubmitButtonState(cf2, fieldConfig, state) {
  var fieldIdAttr = fieldConfig.fieldIdAttr;
  var formIdAttr = getFormIdAttr(cf2, fieldIdAttr);
  var form = jQuery("#" + formIdAttr); //If no state param was send in the function define the state based on elements inside the fieldsBlocking Array

  if (typeof state === "undefined") {
    state = cf2.fieldsBlocking.length <= 0;
  } //If state === true enable submit button else disable submit button


  if (state) {
    form.find(':submit').prop('disabled', false);
  } else {
    form.find(':submit').prop('disabled', true);
  }

  return state;
};
/**
 * Find the formIdAttr corresponding to a fieldIdAttr in the cf2 object
 *
 * @param {object} cf2
 * @param {string} fieldIdAttr
 * @return {string} formIdAttr
 */

var getFormIdAttr = function getFormIdAttr(cf2, fieldIdAttr) {
  var formIdAttr = cf2.formIdAttr;

  if (typeof formIdAttr === "undefined") {
    var entries = Object.entries(cf2);
    var formEntries = [];
    entries.forEach(function (entry) {
      if (entry[1].hasOwnProperty("fields")) {
        formEntries.push(entry);
      }
    });
    formEntries.forEach(function (formEntry) {
      if (formEntry[1].fields.hasOwnProperty(fieldIdAttr)) {
        formIdAttr = formEntry[0];
      }
    });
  }

  return formIdAttr;
};
/**
 * Start or Stop spinner animation to indicate process is happening
 *
 * @since 1.8.0
 *
 * @param {string} formIdAttr Id Attribute of the <form> tag
 * @param {boolean} trigger if true force addClass if false force removeClass
 */

var processAnimation = function processAnimation(formIdAttr, trigger) {
  var cfElement = formIdAttr.length > 0 ? jQuery("#" + formIdAttr).parent(".caldera-grid") : false;

  if (cfElement !== false) {
    if (trigger === false) {
      if (jQuery(cfElement).hasClass("cf_processing")) {
        jQuery(cfElement).removeClass("cf_processing");
      }
    } else if (trigger === true) {
      if (!jQuery(cfElement).hasClass("cf_processing")) {
        jQuery(cfElement).addClass("cf_processing");
      }
    }
  }
};
/**
 * Add a component -- CalderaFormsRender -- to window.cf2 correctly
 *
 * @since 1.8.0
 *
 * @param {function} component
 * @param {string}idAttr
 * @param {object}window
 */

var captureRenderComponentRef = function captureRenderComponentRef(component, idAttr) {
  var window = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  window.cf2 = window.cf2 || {};
  window.cf2[idAttr] = _objectSpread({}, window.cf2[idAttr] || {}, {
    component: component
  });
};

/***/ }),

/***/ "./node_modules/attr-accept/dist/index.js":
/*!************************************************!*\
  !*** ./node_modules/attr-accept/dist/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports=function(t){function n(e){if(r[e])return r[e].exports;var o=r[e]={i:e,l:!1,exports:{}};return t[e].call(o.exports,o,o.exports,n),o.l=!0,o.exports}var r={};return n.m=t,n.c=r,n.d=function(t,r,e){n.o(t,r)||Object.defineProperty(t,r,{configurable:!1,enumerable:!0,get:e})},n.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(r,"a",r),r},n.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},n.p="",n(n.s=13)}([function(t,n){var r=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(t,n){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,n){var r=t.exports={version:"2.5.0"};"number"==typeof __e&&(__e=r)},function(t,n,r){t.exports=!r(4)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(t,n){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,n){var r={}.toString;t.exports=function(t){return r.call(t).slice(8,-1)}},function(t,n,r){var e=r(32)("wks"),o=r(9),i=r(0).Symbol,u="function"==typeof i;(t.exports=function(t){return e[t]||(e[t]=u&&i[t]||(u?i:o)("Symbol."+t))}).store=e},function(t,n,r){var e=r(0),o=r(2),i=r(8),u=r(22),c=r(10),f=function(t,n,r){var a,s,p,l,v=t&f.F,y=t&f.G,h=t&f.S,d=t&f.P,x=t&f.B,g=y?e:h?e[n]||(e[n]={}):(e[n]||{}).prototype,m=y?o:o[n]||(o[n]={}),b=m.prototype||(m.prototype={});y&&(r=n);for(a in r)s=!v&&g&&void 0!==g[a],p=(s?g:r)[a],l=x&&s?c(p,e):d&&"function"==typeof p?c(Function.call,p):p,g&&u(g,a,p,t&f.U),m[a]!=p&&i(m,a,l),d&&b[a]!=p&&(b[a]=p)};e.core=o,f.F=1,f.G=2,f.S=4,f.P=8,f.B=16,f.W=32,f.U=64,f.R=128,t.exports=f},function(t,n,r){var e=r(16),o=r(21);t.exports=r(3)?function(t,n,r){return e.f(t,n,o(1,r))}:function(t,n,r){return t[n]=r,t}},function(t,n){var r=0,e=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++r+e).toString(36))}},function(t,n,r){var e=r(24);t.exports=function(t,n,r){if(e(t),void 0===n)return t;switch(r){case 1:return function(r){return t.call(n,r)};case 2:return function(r,e){return t.call(n,r,e)};case 3:return function(r,e,o){return t.call(n,r,e,o)}}return function(){return t.apply(n,arguments)}}},function(t,n){t.exports=function(t){if(void 0==t)throw TypeError("Can't call method on  "+t);return t}},function(t,n,r){var e=r(28),o=Math.min;t.exports=function(t){return t>0?o(e(t),9007199254740991):0}},function(t,n,r){"use strict";n.__esModule=!0,n.default=function(t,n){if(t&&n){var r=Array.isArray(n)?n:n.split(","),e=t.name||"",o=t.type||"",i=o.replace(/\/.*$/,"");return r.some(function(t){var n=t.trim();return"."===n.charAt(0)?e.toLowerCase().endsWith(n.toLowerCase()):n.endsWith("/*")?i===n.replace(/\/.*$/,""):o===n})}return!0},r(14),r(34)},function(t,n,r){r(15),t.exports=r(2).Array.some},function(t,n,r){"use strict";var e=r(7),o=r(25)(3);e(e.P+e.F*!r(33)([].some,!0),"Array",{some:function(t){return o(this,t,arguments[1])}})},function(t,n,r){var e=r(17),o=r(18),i=r(20),u=Object.defineProperty;n.f=r(3)?Object.defineProperty:function(t,n,r){if(e(t),n=i(n,!0),e(r),o)try{return u(t,n,r)}catch(t){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(t[n]=r.value),t}},function(t,n,r){var e=r(1);t.exports=function(t){if(!e(t))throw TypeError(t+" is not an object!");return t}},function(t,n,r){t.exports=!r(3)&&!r(4)(function(){return 7!=Object.defineProperty(r(19)("div"),"a",{get:function(){return 7}}).a})},function(t,n,r){var e=r(1),o=r(0).document,i=e(o)&&e(o.createElement);t.exports=function(t){return i?o.createElement(t):{}}},function(t,n,r){var e=r(1);t.exports=function(t,n){if(!e(t))return t;var r,o;if(n&&"function"==typeof(r=t.toString)&&!e(o=r.call(t)))return o;if("function"==typeof(r=t.valueOf)&&!e(o=r.call(t)))return o;if(!n&&"function"==typeof(r=t.toString)&&!e(o=r.call(t)))return o;throw TypeError("Can't convert object to primitive value")}},function(t,n){t.exports=function(t,n){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:n}}},function(t,n,r){var e=r(0),o=r(8),i=r(23),u=r(9)("src"),c=Function.toString,f=(""+c).split("toString");r(2).inspectSource=function(t){return c.call(t)},(t.exports=function(t,n,r,c){var a="function"==typeof r;a&&(i(r,"name")||o(r,"name",n)),t[n]!==r&&(a&&(i(r,u)||o(r,u,t[n]?""+t[n]:f.join(String(n)))),t===e?t[n]=r:c?t[n]?t[n]=r:o(t,n,r):(delete t[n],o(t,n,r)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[u]||c.call(this)})},function(t,n){var r={}.hasOwnProperty;t.exports=function(t,n){return r.call(t,n)}},function(t,n){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,n,r){var e=r(10),o=r(26),i=r(27),u=r(12),c=r(29);t.exports=function(t,n){var r=1==t,f=2==t,a=3==t,s=4==t,p=6==t,l=5==t||p,v=n||c;return function(n,c,y){for(var h,d,x=i(n),g=o(x),m=e(c,y,3),b=u(g.length),_=0,w=r?v(n,b):f?v(n,0):void 0;b>_;_++)if((l||_ in g)&&(h=g[_],d=m(h,_,x),t))if(r)w[_]=d;else if(d)switch(t){case 3:return!0;case 5:return h;case 6:return _;case 2:w.push(h)}else if(s)return!1;return p?-1:a||s?s:w}}},function(t,n,r){var e=r(5);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==e(t)?t.split(""):Object(t)}},function(t,n,r){var e=r(11);t.exports=function(t){return Object(e(t))}},function(t,n){var r=Math.ceil,e=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?e:r)(t)}},function(t,n,r){var e=r(30);t.exports=function(t,n){return new(e(t))(n)}},function(t,n,r){var e=r(1),o=r(31),i=r(6)("species");t.exports=function(t){var n;return o(t)&&(n=t.constructor,"function"!=typeof n||n!==Array&&!o(n.prototype)||(n=void 0),e(n)&&null===(n=n[i])&&(n=void 0)),void 0===n?Array:n}},function(t,n,r){var e=r(5);t.exports=Array.isArray||function(t){return"Array"==e(t)}},function(t,n,r){var e=r(0),o=e["__core-js_shared__"]||(e["__core-js_shared__"]={});t.exports=function(t){return o[t]||(o[t]={})}},function(t,n,r){"use strict";var e=r(4);t.exports=function(t,n){return!!t&&e(function(){n?t.call(null,function(){},1):t.call(null)})}},function(t,n,r){r(35),t.exports=r(2).String.endsWith},function(t,n,r){"use strict";var e=r(7),o=r(12),i=r(36),u="".endsWith;e(e.P+e.F*r(38)("endsWith"),"String",{endsWith:function(t){var n=i(this,t,"endsWith"),r=arguments.length>1?arguments[1]:void 0,e=o(n.length),c=void 0===r?e:Math.min(o(r),e),f=String(t);return u?u.call(n,f,c):n.slice(c-f.length,c)===f}})},function(t,n,r){var e=r(37),o=r(11);t.exports=function(t,n,r){if(e(n))throw TypeError("String#"+r+" doesn't accept regex!");return String(o(t))}},function(t,n,r){var e=r(1),o=r(5),i=r(6)("match");t.exports=function(t){var n;return e(t)&&(void 0!==(n=t[i])?!!n:"RegExp"==o(t))}},function(t,n,r){var e=r(6)("match");t.exports=function(t){var n=/./;try{"/./"[t](n)}catch(r){try{return n[e]=!1,!"/./"[t](n)}catch(t){}}return!0}}]);

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (true) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
var assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ( true && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (true) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(ReactIs.isElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/react-dropzone/dist/es/index.js":
/*!******************************************************!*\
  !*** ./node_modules/react-dropzone/dist/es/index.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./node_modules/react-dropzone/dist/es/utils/index.js");
/* harmony import */ var _utils_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/styles */ "./node_modules/react-dropzone/dist/es/utils/styles.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* eslint prefer-template: 0 */






var Dropzone = function (_React$Component) {
  _inherits(Dropzone, _React$Component);

  function Dropzone(props, context) {
    _classCallCheck(this, Dropzone);

    var _this = _possibleConstructorReturn(this, (Dropzone.__proto__ || Object.getPrototypeOf(Dropzone)).call(this, props, context));

    _this.renderChildren = function (children, isDragActive, isDragAccept, isDragReject) {
      if (typeof children === 'function') {
        return children(_extends({}, _this.state, {
          isDragActive: isDragActive,
          isDragAccept: isDragAccept,
          isDragReject: isDragReject,
          open: _this.open
        }));
      }
      return children;
    };

    _this.composeHandlers = _this.composeHandlers.bind(_this);
    _this.onClick = _this.onClick.bind(_this);
    _this.onDocumentDrop = _this.onDocumentDrop.bind(_this);
    _this.onDragEnter = _this.onDragEnter.bind(_this);
    _this.onDragLeave = _this.onDragLeave.bind(_this);
    _this.onDragOver = _this.onDragOver.bind(_this);
    _this.onDragStart = _this.onDragStart.bind(_this);
    _this.onDrop = _this.onDrop.bind(_this);
    _this.onFileDialogCancel = _this.onFileDialogCancel.bind(_this);
    _this.onInputElementClick = _this.onInputElementClick.bind(_this);
    _this.open = _this.open.bind(_this);

    _this.setRef = _this.setRef.bind(_this);
    _this.setRefs = _this.setRefs.bind(_this);

    _this.isFileDialogActive = false;

    _this.state = {
      draggedFiles: [],
      acceptedFiles: [],
      rejectedFiles: []
    };
    return _this;
  }

  _createClass(Dropzone, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var preventDropOnDocument = this.props.preventDropOnDocument;

      this.dragTargets = [];

      if (preventDropOnDocument) {
        document.addEventListener('dragover', _utils__WEBPACK_IMPORTED_MODULE_2__["onDocumentDragOver"], false);
        document.addEventListener('drop', this.onDocumentDrop, false);
      }
      if (this.fileInputEl != null) {
        this.fileInputEl.addEventListener('click', this.onInputElementClick, false);
      }
      window.addEventListener('focus', this.onFileDialogCancel, false);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var preventDropOnDocument = this.props.preventDropOnDocument;

      if (preventDropOnDocument) {
        document.removeEventListener('dragover', _utils__WEBPACK_IMPORTED_MODULE_2__["onDocumentDragOver"]);
        document.removeEventListener('drop', this.onDocumentDrop);
      }
      if (this.fileInputEl != null) {
        this.fileInputEl.removeEventListener('click', this.onInputElementClick, false);
      }
      window.removeEventListener('focus', this.onFileDialogCancel, false);
    }
  }, {
    key: 'composeHandlers',
    value: function composeHandlers(handler) {
      if (this.props.disabled) {
        return null;
      }

      return handler;
    }
  }, {
    key: 'onDocumentDrop',
    value: function onDocumentDrop(evt) {
      if (this.node && this.node.contains(evt.target)) {
        // if we intercepted an event for our instance, let it propagate down to the instance's onDrop handler
        return;
      }
      evt.preventDefault();
      this.dragTargets = [];
    }
  }, {
    key: 'onDragStart',
    value: function onDragStart(evt) {
      evt.persist();
      if (this.props.onDragStart && Object(_utils__WEBPACK_IMPORTED_MODULE_2__["isDragDataWithFiles"])(evt)) {
        this.props.onDragStart.call(this, evt);
      }
    }
  }, {
    key: 'onDragEnter',
    value: function onDragEnter(evt) {
      var _this2 = this;

      evt.preventDefault();

      // Count the dropzone and any children that are entered.
      if (this.dragTargets.indexOf(evt.target) === -1) {
        this.dragTargets.push(evt.target);
      }

      evt.persist();

      if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__["isDragDataWithFiles"])(evt)) {
        Promise.resolve(this.props.getDataTransferItems(evt)).then(function (draggedFiles) {
          if (evt.isPropagationStopped()) {
            return;
          }

          _this2.setState({
            draggedFiles: draggedFiles,
            // Do not rely on files for the drag state. It doesn't work in Safari.
            isDragActive: true
          });
        });

        if (this.props.onDragEnter) {
          this.props.onDragEnter.call(this, evt);
        }
      }
    }
  }, {
    key: 'onDragOver',
    value: function onDragOver(evt) {
      // eslint-disable-line class-methods-use-this
      evt.preventDefault();
      evt.persist();

      try {
        // The file dialog on Chrome allows users to drag files from the dialog onto
        // the dropzone, causing the browser the crash when the file dialog is closed.
        // A drop effect of 'none' prevents the file from being dropped
        evt.dataTransfer.dropEffect = this.isFileDialogActive ? 'none' : 'copy'; // eslint-disable-line no-param-reassign
      } catch (err) {
        // continue regardless of error
      }

      if (this.props.onDragOver && Object(_utils__WEBPACK_IMPORTED_MODULE_2__["isDragDataWithFiles"])(evt)) {
        this.props.onDragOver.call(this, evt);
      }

      return false;
    }
  }, {
    key: 'onDragLeave',
    value: function onDragLeave(evt) {
      var _this3 = this;

      evt.preventDefault();
      evt.persist();

      // Only deactivate once the dropzone and all children have been left.
      this.dragTargets = this.dragTargets.filter(function (el) {
        return el !== evt.target && _this3.node.contains(el);
      });
      if (this.dragTargets.length > 0) {
        return;
      }

      // Clear dragging files state
      this.setState({
        isDragActive: false,
        draggedFiles: []
      });

      if (this.props.onDragLeave && Object(_utils__WEBPACK_IMPORTED_MODULE_2__["isDragDataWithFiles"])(evt)) {
        this.props.onDragLeave.call(this, evt);
      }
    }
  }, {
    key: 'onDrop',
    value: function onDrop(evt) {
      var _this4 = this;

      var _props = this.props,
          onDrop = _props.onDrop,
          onDropAccepted = _props.onDropAccepted,
          onDropRejected = _props.onDropRejected,
          multiple = _props.multiple,
          disablePreview = _props.disablePreview,
          accept = _props.accept,
          getDataTransferItems = _props.getDataTransferItems;

      // Stop default browser behavior

      evt.preventDefault();

      // Persist event for later usage
      evt.persist();

      // Reset the counter along with the drag on a drop.
      this.dragTargets = [];
      this.isFileDialogActive = false;

      // Clear files value
      this.draggedFiles = null;

      // Reset drag state
      this.setState({
        isDragActive: false,
        draggedFiles: []
      });

      if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__["isDragDataWithFiles"])(evt)) {
        Promise.resolve(getDataTransferItems(evt)).then(function (fileList) {
          var acceptedFiles = [];
          var rejectedFiles = [];

          if (evt.isPropagationStopped()) {
            return;
          }

          fileList.forEach(function (file) {
            if (!disablePreview) {
              file.preview = window.URL.createObjectURL(file); // eslint-disable-line no-param-reassign
            }

            if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__["fileAccepted"])(file, accept) && Object(_utils__WEBPACK_IMPORTED_MODULE_2__["fileMatchSize"])(file, _this4.props.maxSize, _this4.props.minSize)) {
              acceptedFiles.push(file);
            } else {
              rejectedFiles.push(file);
            }
          });

          if (!multiple && acceptedFiles.length > 1) {
            // if not in multi mode add any extra accepted files to rejected.
            // This will allow end users to easily ignore a multi file drop in "single" mode.
            rejectedFiles.push.apply(rejectedFiles, _toConsumableArray(acceptedFiles.splice(0)));
          }

          // Update `acceptedFiles` and `rejectedFiles` state
          // This will make children render functions receive the appropriate
          // values
          _this4.setState({ acceptedFiles: acceptedFiles, rejectedFiles: rejectedFiles }, function () {
            if (onDrop) {
              onDrop.call(_this4, acceptedFiles, rejectedFiles, evt);
            }

            if (rejectedFiles.length > 0 && onDropRejected) {
              onDropRejected.call(_this4, rejectedFiles, evt);
            }

            if (acceptedFiles.length > 0 && onDropAccepted) {
              onDropAccepted.call(_this4, acceptedFiles, evt);
            }
          });
        });
      }
    }
  }, {
    key: 'onClick',
    value: function onClick(evt) {
      var _props2 = this.props,
          onClick = _props2.onClick,
          disableClick = _props2.disableClick;

      // if onClick prop is given, run it first

      if (onClick) {
        onClick.call(this, evt);
      }

      // if disableClick is not set and the event hasn't been default prefented within
      // the onClick listener, open the file dialog
      if (!disableClick && !evt.isDefaultPrevented()) {
        evt.stopPropagation();

        // in IE11/Edge the file-browser dialog is blocking, ensure this is behind setTimeout
        // this is so react can handle state changes in the onClick prop above above
        // see: https://github.com/react-dropzone/react-dropzone/issues/450
        if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__["isIeOrEdge"])()) {
          setTimeout(this.open, 0);
        } else {
          this.open();
        }
      }
    }
  }, {
    key: 'onInputElementClick',
    value: function onInputElementClick(evt) {
      evt.stopPropagation();
      if (this.props.inputProps && this.props.inputProps.onClick) {
        this.props.inputProps.onClick(evt);
      }
    }
  }, {
    key: 'onFileDialogCancel',
    value: function onFileDialogCancel() {
      var _this5 = this;

      // timeout will not recognize context of this method
      var onFileDialogCancel = this.props.onFileDialogCancel;
      // execute the timeout only if the FileDialog is opened in the browser

      if (this.isFileDialogActive) {
        setTimeout(function () {
          if (_this5.fileInputEl != null) {
            // Returns an object as FileList
            var files = _this5.fileInputEl.files;


            if (!files.length) {
              _this5.isFileDialogActive = false;
            }
          }

          if (typeof onFileDialogCancel === 'function') {
            onFileDialogCancel();
          }
        }, 300);
      }
    }
  }, {
    key: 'setRef',
    value: function setRef(ref) {
      this.node = ref;
    }
  }, {
    key: 'setRefs',
    value: function setRefs(ref) {
      this.fileInputEl = ref;
    }
    /**
     * Open system file upload dialog.
     *
     * @public
     */

  }, {
    key: 'open',
    value: function open() {
      this.isFileDialogActive = true;
      this.fileInputEl.value = null;
      this.fileInputEl.click();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          accept = _props3.accept,
          acceptClassName = _props3.acceptClassName,
          activeClassName = _props3.activeClassName,
          children = _props3.children,
          disabled = _props3.disabled,
          disabledClassName = _props3.disabledClassName,
          inputProps = _props3.inputProps,
          multiple = _props3.multiple,
          name = _props3.name,
          rejectClassName = _props3.rejectClassName,
          rest = _objectWithoutProperties(_props3, ['accept', 'acceptClassName', 'activeClassName', 'children', 'disabled', 'disabledClassName', 'inputProps', 'multiple', 'name', 'rejectClassName']);

      var acceptStyle = rest.acceptStyle,
          activeStyle = rest.activeStyle,
          _rest$className = rest.className,
          className = _rest$className === undefined ? '' : _rest$className,
          disabledStyle = rest.disabledStyle,
          rejectStyle = rest.rejectStyle,
          style = rest.style,
          props = _objectWithoutProperties(rest, ['acceptStyle', 'activeStyle', 'className', 'disabledStyle', 'rejectStyle', 'style']);

      var _state = this.state,
          isDragActive = _state.isDragActive,
          draggedFiles = _state.draggedFiles;

      var filesCount = draggedFiles.length;
      var isMultipleAllowed = multiple || filesCount <= 1;
      var isDragAccept = filesCount > 0 && Object(_utils__WEBPACK_IMPORTED_MODULE_2__["allFilesAccepted"])(draggedFiles, this.props.accept);
      var isDragReject = filesCount > 0 && (!isDragAccept || !isMultipleAllowed);
      var noStyles = !className && !style && !activeStyle && !acceptStyle && !rejectStyle && !disabledStyle;

      if (isDragActive && activeClassName) {
        className += ' ' + activeClassName;
      }
      if (isDragAccept && acceptClassName) {
        className += ' ' + acceptClassName;
      }
      if (isDragReject && rejectClassName) {
        className += ' ' + rejectClassName;
      }
      if (disabled && disabledClassName) {
        className += ' ' + disabledClassName;
      }

      if (noStyles) {
        style = _utils_styles__WEBPACK_IMPORTED_MODULE_3__["default"].default;
        activeStyle = _utils_styles__WEBPACK_IMPORTED_MODULE_3__["default"].active;
        acceptStyle = _utils_styles__WEBPACK_IMPORTED_MODULE_3__["default"].accepted;
        rejectStyle = _utils_styles__WEBPACK_IMPORTED_MODULE_3__["default"].rejected;
        disabledStyle = _utils_styles__WEBPACK_IMPORTED_MODULE_3__["default"].disabled;
      }

      var appliedStyle = _extends({ position: 'relative' }, style);
      if (activeStyle && isDragActive) {
        appliedStyle = _extends({}, appliedStyle, activeStyle);
      }
      if (acceptStyle && isDragAccept) {
        appliedStyle = _extends({}, appliedStyle, acceptStyle);
      }
      if (rejectStyle && isDragReject) {
        appliedStyle = _extends({}, appliedStyle, rejectStyle);
      }
      if (disabledStyle && disabled) {
        appliedStyle = _extends({}, appliedStyle, disabledStyle);
      }

      var inputAttributes = {
        accept: accept,
        disabled: disabled,
        type: 'file',
        style: _extends({
          position: 'absolute',
          top: 0,
          right: 0,
          bottom: 0,
          left: 0,
          opacity: 0.00001,
          pointerEvents: 'none'
        }, inputProps.style),
        multiple: _utils__WEBPACK_IMPORTED_MODULE_2__["supportMultiple"] && multiple,
        ref: this.setRefs,
        onChange: this.onDrop,
        autoComplete: 'off'
      };

      if (name && name.length) {
        inputAttributes.name = name;
      }

      // Destructure custom props away from props used for the div element
      /* eslint-disable no-unused-vars */

      var acceptedFiles = props.acceptedFiles,
          preventDropOnDocument = props.preventDropOnDocument,
          disablePreview = props.disablePreview,
          disableClick = props.disableClick,
          onDropAccepted = props.onDropAccepted,
          onDropRejected = props.onDropRejected,
          onFileDialogCancel = props.onFileDialogCancel,
          maxSize = props.maxSize,
          minSize = props.minSize,
          getDataTransferItems = props.getDataTransferItems,
          divProps = _objectWithoutProperties(props, ['acceptedFiles', 'preventDropOnDocument', 'disablePreview', 'disableClick', 'onDropAccepted', 'onDropRejected', 'onFileDialogCancel', 'maxSize', 'minSize', 'getDataTransferItems']);
      /* eslint-enable no-unused-vars */

      /* eslint-disable jsx-a11y/no-static-element-interactions */
      /* eslint-disable jsx-a11y/click-events-have-key-events */


      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
        'div',
        _extends({
          className: className,
          style: appliedStyle
        }, divProps /* expand user provided props first so event handlers are never overridden */
        , {
          onClick: this.composeHandlers(this.onClick),
          onDragStart: this.composeHandlers(this.onDragStart),
          onDragEnter: this.composeHandlers(this.onDragEnter),
          onDragOver: this.composeHandlers(this.onDragOver),
          onDragLeave: this.composeHandlers(this.onDragLeave),
          onDrop: this.composeHandlers(this.onDrop),
          ref: this.setRef,
          'aria-disabled': disabled
        }),
        this.renderChildren(children, isDragActive, isDragAccept, isDragReject),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('input', _extends({}, inputProps /* expand user provided inputProps first so inputAttributes override them */
        , inputAttributes))
      );
    }
  }]);

  return Dropzone;
}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);

/* harmony default export */ __webpack_exports__["default"] = (Dropzone);

Dropzone.propTypes = {
  /**
   * Allow specific types of files. See https://github.com/okonet/attr-accept for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all.
   * See: https://github.com/react-dropzone/react-dropzone/issues/276
   */
  accept: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string)]),

  /**
   * Contents of the dropzone
   */
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func]),

  /**
   * Disallow clicking on the dropzone container to open file dialog
   */
  disableClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,

  /**
   * Enable/disable the dropzone entirely
   */
  disabled: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,

  /**
   * Enable/disable preview generation
   */
  disablePreview: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,

  /**
   * If false, allow dropped items to take over the current browser window
   */
  preventDropOnDocument: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,

  /**
   * Pass additional attributes to the `<input type="file"/>` tag
   */
  inputProps: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,

  /**
   * Allow dropping multiple files
   */
  multiple: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,

  /**
   * `name` attribute for the input tag
   */
  name: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,

  /**
   * Maximum file size (in bytes)
   */
  maxSize: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,

  /**
   * Minimum file size (in bytes)
   */
  minSize: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,

  /**
   * className
   */
  className: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,

  /**
   * className to apply when drag is active
   */
  activeClassName: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,

  /**
   * className to apply when drop will be accepted
   */
  acceptClassName: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,

  /**
   * className to apply when drop will be rejected
   */
  rejectClassName: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,

  /**
   * className to apply when dropzone is disabled
   */
  disabledClassName: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,

  /**
   * CSS styles to apply
   */
  style: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,

  /**
   * CSS styles to apply when drag is active
   */
  activeStyle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,

  /**
   * CSS styles to apply when drop will be accepted
   */
  acceptStyle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,

  /**
   * CSS styles to apply when drop will be rejected
   */
  rejectStyle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,

  /**
   * CSS styles to apply when dropzone is disabled
   */
  disabledStyle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,

  /**
   * getDataTransferItems handler
   * @param {Event} event
   * @returns {Array} array of File objects
   */
  getDataTransferItems: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

  /**
   * onClick callback
   * @param {Event} event
   */
  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

  /**
   * onDrop callback
   */
  onDrop: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

  /**
   * onDropAccepted callback
   */
  onDropAccepted: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

  /**
   * onDropRejected callback
   */
  onDropRejected: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

  /**
   * onDragStart callback
   */
  onDragStart: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

  /**
   * onDragEnter callback
   */
  onDragEnter: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

  /**
   * onDragOver callback
   */
  onDragOver: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

  /**
   * onDragLeave callback
   */
  onDragLeave: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

  /**
   * Provide a callback on clicking the cancel button of the file dialog
   */
  onFileDialogCancel: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func
};

Dropzone.defaultProps = {
  preventDropOnDocument: true,
  disabled: false,
  disablePreview: false,
  disableClick: false,
  inputProps: {},
  multiple: true,
  maxSize: Infinity,
  minSize: 0,
  getDataTransferItems: _utils__WEBPACK_IMPORTED_MODULE_2__["getDataTransferItems"]
};

/***/ }),

/***/ "./node_modules/react-dropzone/dist/es/utils/index.js":
/*!************************************************************!*\
  !*** ./node_modules/react-dropzone/dist/es/utils/index.js ***!
  \************************************************************/
/*! exports provided: supportMultiple, getDataTransferItems, fileAccepted, fileMatchSize, allFilesAccepted, isDragDataWithFiles, isKindFile, onDocumentDragOver, isIeOrEdge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportMultiple", function() { return supportMultiple; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDataTransferItems", function() { return getDataTransferItems; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fileAccepted", function() { return fileAccepted; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fileMatchSize", function() { return fileMatchSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "allFilesAccepted", function() { return allFilesAccepted; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDragDataWithFiles", function() { return isDragDataWithFiles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isKindFile", function() { return isKindFile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onDocumentDragOver", function() { return onDocumentDragOver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIeOrEdge", function() { return isIeOrEdge; });
/* harmony import */ var attr_accept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! attr-accept */ "./node_modules/attr-accept/dist/index.js");
/* harmony import */ var attr_accept__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(attr_accept__WEBPACK_IMPORTED_MODULE_0__);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };



var supportMultiple = typeof document !== 'undefined' && document && document.createElement ? 'multiple' in document.createElement('input') : true;

function getDataTransferItems(event) {
  var dataTransferItemsList = [];
  if (event.dataTransfer) {
    var dt = event.dataTransfer;

    // NOTE: Only the 'drop' event has access to DataTransfer.files,
    // otherwise it will always be empty
    if (dt.files && dt.files.length) {
      dataTransferItemsList = dt.files;
    } else if (dt.items && dt.items.length) {
      // During the drag even the dataTransfer.files is null
      // but Chrome implements some drag store, which is accesible via dataTransfer.items
      dataTransferItemsList = dt.items;
    }
  } else if (event.target && event.target.files) {
    dataTransferItemsList = event.target.files;
  }

  // Convert from DataTransferItemsList to the native Array
  return Array.prototype.slice.call(dataTransferItemsList);
}

// Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with
// that MIME type will always be accepted
function fileAccepted(file, accept) {
  return file.type === 'application/x-moz-file' || attr_accept__WEBPACK_IMPORTED_MODULE_0___default()(file, accept);
}

function fileMatchSize(file, maxSize, minSize) {
  return file.size <= maxSize && file.size >= minSize;
}

function allFilesAccepted(files, accept) {
  return files.every(function (file) {
    return fileAccepted(file, accept);
  });
}

function isDragDataWithFiles(evt) {
  if (!evt.dataTransfer) {
    return true;
  }
  // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types
  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file
  return Array.prototype.every.call(evt.dataTransfer.types, function (type) {
    return type === 'Files' || type === 'application/x-moz-file';
  });
}

function isKindFile(item) {
  return (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && item !== null && item.kind === 'file';
}

// allow the entire document to be a drag target
function onDocumentDragOver(evt) {
  evt.preventDefault();
}

function isIe(userAgent) {
  return userAgent.indexOf('MSIE') !== -1 || userAgent.indexOf('Trident/') !== -1;
}

function isEdge(userAgent) {
  return userAgent.indexOf('Edge/') !== -1;
}

function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.navigator.userAgent;

  return isIe(userAgent) || isEdge(userAgent);
}

/***/ }),

/***/ "./node_modules/react-dropzone/dist/es/utils/styles.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dropzone/dist/es/utils/styles.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  active: {
    borderStyle: 'solid',
    backgroundColor: '#eee'
  },
  accepted: {
    borderStyle: 'solid',
    borderColor: '#6c6',
    backgroundColor: '#eee'
  },
  rejected: {
    borderStyle: 'solid',
    borderColor: '#c66',
    backgroundColor: '#eee'
  },
  default: {
    width: 200,
    height: 200,
    borderWidth: 2,
    borderColor: '#666',
    borderStyle: 'dashed',
    borderRadius: 5
  },
  disabled: {
    opacity: 0.5
  }
});

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/spark-md5/spark-md5.js":
/*!*********************************************!*\
  !*** ./node_modules/spark-md5/spark-md5.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function (factory) {
    if (true) {
        // Node/CommonJS
        module.exports = factory();
    } else { var glob; }
}(function (undefined) {

    'use strict';

    /*
     * Fastest md5 implementation around (JKM md5).
     * Credits: Joseph Myers
     *
     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html
     * @see http://jsperf.com/md5-shootout/7
     */

    /* this function is much faster,
      so if possible we use it. Some IEs
      are the only ones I know of that
      need the idiotic second function,
      generated by an if clause.  */
    var add32 = function (a, b) {
        return (a + b) & 0xFFFFFFFF;
    },
        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];


    function cmn(q, a, b, x, s, t) {
        a = add32(add32(a, q), add32(x, t));
        return add32((a << s) | (a >>> (32 - s)), b);
    }

    function md5cycle(x, k) {
        var a = x[0],
            b = x[1],
            c = x[2],
            d = x[3];

        a += (b & c | ~b & d) + k[0] - 680876936 | 0;
        a  = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[1] - 389564586 | 0;
        d  = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[2] + 606105819 | 0;
        c  = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;
        b  = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[4] - 176418897 | 0;
        a  = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;
        d  = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;
        c  = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[7] - 45705983 | 0;
        b  = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;
        a  = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;
        d  = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[10] - 42063 | 0;
        c  = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;
        b  = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;
        a  = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[13] - 40341101 | 0;
        d  = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;
        c  = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;
        b  = (b << 22 | b >>> 10) + c | 0;

        a += (b & d | c & ~d) + k[1] - 165796510 | 0;
        a  = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;
        d  = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[11] + 643717713 | 0;
        c  = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[0] - 373897302 | 0;
        b  = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[5] - 701558691 | 0;
        a  = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[10] + 38016083 | 0;
        d  = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[15] - 660478335 | 0;
        c  = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[4] - 405537848 | 0;
        b  = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[9] + 568446438 | 0;
        a  = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;
        d  = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[3] - 187363961 | 0;
        c  = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;
        b  = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;
        a  = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[2] - 51403784 | 0;
        d  = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;
        c  = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;
        b  = (b << 20 | b >>> 12) + c | 0;

        a += (b ^ c ^ d) + k[5] - 378558 | 0;
        a  = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;
        d  = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;
        c  = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[14] - 35309556 | 0;
        b  = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;
        a  = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;
        d  = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[7] - 155497632 | 0;
        c  = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;
        b  = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[13] + 681279174 | 0;
        a  = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[0] - 358537222 | 0;
        d  = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[3] - 722521979 | 0;
        c  = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[6] + 76029189 | 0;
        b  = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[9] - 640364487 | 0;
        a  = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[12] - 421815835 | 0;
        d  = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[15] + 530742520 | 0;
        c  = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[2] - 995338651 | 0;
        b  = (b << 23 | b >>> 9) + c | 0;

        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;
        a  = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;
        d  = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;
        c  = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;
        b  = (b << 21 |b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;
        a  = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;
        d  = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;
        c  = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;
        b  = (b << 21 |b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;
        a  = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;
        d  = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;
        c  = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;
        b  = (b << 21 |b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;
        a  = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;
        d  = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;
        c  = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;
        b  = (b << 21 | b >>> 11) + c | 0;

        x[0] = a + x[0] | 0;
        x[1] = b + x[1] | 0;
        x[2] = c + x[2] | 0;
        x[3] = d + x[3] | 0;
    }

    function md5blk(s) {
        var md5blks = [],
            i; /* Andy King said do it this way. */

        for (i = 0; i < 64; i += 4) {
            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);
        }
        return md5blks;
    }

    function md5blk_array(a) {
        var md5blks = [],
            i; /* Andy King said do it this way. */

        for (i = 0; i < 64; i += 4) {
            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);
        }
        return md5blks;
    }

    function md51(s) {
        var n = s.length,
            state = [1732584193, -271733879, -1732584194, 271733878],
            i,
            length,
            tail,
            tmp,
            lo,
            hi;

        for (i = 64; i <= n; i += 64) {
            md5cycle(state, md5blk(s.substring(i - 64, i)));
        }
        s = s.substring(i - 64);
        length = s.length;
        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        for (i = 0; i < length; i += 1) {
            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);
        }
        tail[i >> 2] |= 0x80 << ((i % 4) << 3);
        if (i > 55) {
            md5cycle(state, tail);
            for (i = 0; i < 16; i += 1) {
                tail[i] = 0;
            }
        }

        // Beware that the final length might not fit in 32 bits so we take care of that
        tmp = n * 8;
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
        lo = parseInt(tmp[2], 16);
        hi = parseInt(tmp[1], 16) || 0;

        tail[14] = lo;
        tail[15] = hi;

        md5cycle(state, tail);
        return state;
    }

    function md51_array(a) {
        var n = a.length,
            state = [1732584193, -271733879, -1732584194, 271733878],
            i,
            length,
            tail,
            tmp,
            lo,
            hi;

        for (i = 64; i <= n; i += 64) {
            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));
        }

        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1
        // containing the last element of the parent array if the sub array specified starts
        // beyond the length of the parent array - weird.
        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue
        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);

        length = a.length;
        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        for (i = 0; i < length; i += 1) {
            tail[i >> 2] |= a[i] << ((i % 4) << 3);
        }

        tail[i >> 2] |= 0x80 << ((i % 4) << 3);
        if (i > 55) {
            md5cycle(state, tail);
            for (i = 0; i < 16; i += 1) {
                tail[i] = 0;
            }
        }

        // Beware that the final length might not fit in 32 bits so we take care of that
        tmp = n * 8;
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
        lo = parseInt(tmp[2], 16);
        hi = parseInt(tmp[1], 16) || 0;

        tail[14] = lo;
        tail[15] = hi;

        md5cycle(state, tail);

        return state;
    }

    function rhex(n) {
        var s = '',
            j;
        for (j = 0; j < 4; j += 1) {
            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];
        }
        return s;
    }

    function hex(x) {
        var i;
        for (i = 0; i < x.length; i += 1) {
            x[i] = rhex(x[i]);
        }
        return x.join('');
    }

    // In some cases the fast add32 function cannot be used..
    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {
        add32 = function (x, y) {
            var lsw = (x & 0xFFFF) + (y & 0xFFFF),
                msw = (x >> 16) + (y >> 16) + (lsw >> 16);
            return (msw << 16) | (lsw & 0xFFFF);
        };
    }

    // ---------------------------------------------------

    /**
     * ArrayBuffer slice polyfill.
     *
     * @see https://github.com/ttaubert/node-arraybuffer-slice
     */

    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {
        (function () {
            function clamp(val, length) {
                val = (val | 0) || 0;

                if (val < 0) {
                    return Math.max(val + length, 0);
                }

                return Math.min(val, length);
            }

            ArrayBuffer.prototype.slice = function (from, to) {
                var length = this.byteLength,
                    begin = clamp(from, length),
                    end = length,
                    num,
                    target,
                    targetArray,
                    sourceArray;

                if (to !== undefined) {
                    end = clamp(to, length);
                }

                if (begin > end) {
                    return new ArrayBuffer(0);
                }

                num = end - begin;
                target = new ArrayBuffer(num);
                targetArray = new Uint8Array(target);

                sourceArray = new Uint8Array(this, begin, num);
                targetArray.set(sourceArray);

                return target;
            };
        })();
    }

    // ---------------------------------------------------

    /**
     * Helpers.
     */

    function toUtf8(str) {
        if (/[\u0080-\uFFFF]/.test(str)) {
            str = unescape(encodeURIComponent(str));
        }

        return str;
    }

    function utf8Str2ArrayBuffer(str, returnUInt8Array) {
        var length = str.length,
           buff = new ArrayBuffer(length),
           arr = new Uint8Array(buff),
           i;

        for (i = 0; i < length; i += 1) {
            arr[i] = str.charCodeAt(i);
        }

        return returnUInt8Array ? arr : buff;
    }

    function arrayBuffer2Utf8Str(buff) {
        return String.fromCharCode.apply(null, new Uint8Array(buff));
    }

    function concatenateArrayBuffers(first, second, returnUInt8Array) {
        var result = new Uint8Array(first.byteLength + second.byteLength);

        result.set(new Uint8Array(first));
        result.set(new Uint8Array(second), first.byteLength);

        return returnUInt8Array ? result : result.buffer;
    }

    function hexToBinaryString(hex) {
        var bytes = [],
            length = hex.length,
            x;

        for (x = 0; x < length - 1; x += 2) {
            bytes.push(parseInt(hex.substr(x, 2), 16));
        }

        return String.fromCharCode.apply(String, bytes);
    }

    // ---------------------------------------------------

    /**
     * SparkMD5 OOP implementation.
     *
     * Use this class to perform an incremental md5, otherwise use the
     * static methods instead.
     */

    function SparkMD5() {
        // call reset to init the instance
        this.reset();
    }

    /**
     * Appends a string.
     * A conversion will be applied if an utf8 string is detected.
     *
     * @param {String} str The string to be appended
     *
     * @return {SparkMD5} The instance itself
     */
    SparkMD5.prototype.append = function (str) {
        // Converts the string to utf8 bytes if necessary
        // Then append as binary
        this.appendBinary(toUtf8(str));

        return this;
    };

    /**
     * Appends a binary string.
     *
     * @param {String} contents The binary string to be appended
     *
     * @return {SparkMD5} The instance itself
     */
    SparkMD5.prototype.appendBinary = function (contents) {
        this._buff += contents;
        this._length += contents.length;

        var length = this._buff.length,
            i;

        for (i = 64; i <= length; i += 64) {
            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));
        }

        this._buff = this._buff.substring(i - 64);

        return this;
    };

    /**
     * Finishes the incremental computation, reseting the internal state and
     * returning the result.
     *
     * @param {Boolean} raw True to get the raw string, false to get the hex string
     *
     * @return {String} The result
     */
    SparkMD5.prototype.end = function (raw) {
        var buff = this._buff,
            length = buff.length,
            i,
            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            ret;

        for (i = 0; i < length; i += 1) {
            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);
        }

        this._finish(tail, length);
        ret = hex(this._hash);

        if (raw) {
            ret = hexToBinaryString(ret);
        }

        this.reset();

        return ret;
    };

    /**
     * Resets the internal state of the computation.
     *
     * @return {SparkMD5} The instance itself
     */
    SparkMD5.prototype.reset = function () {
        this._buff = '';
        this._length = 0;
        this._hash = [1732584193, -271733879, -1732584194, 271733878];

        return this;
    };

    /**
     * Gets the internal state of the computation.
     *
     * @return {Object} The state
     */
    SparkMD5.prototype.getState = function () {
        return {
            buff: this._buff,
            length: this._length,
            hash: this._hash.slice()
        };
    };

    /**
     * Gets the internal state of the computation.
     *
     * @param {Object} state The state
     *
     * @return {SparkMD5} The instance itself
     */
    SparkMD5.prototype.setState = function (state) {
        this._buff = state.buff;
        this._length = state.length;
        this._hash = state.hash;

        return this;
    };

    /**
     * Releases memory used by the incremental buffer and other additional
     * resources. If you plan to use the instance again, use reset instead.
     */
    SparkMD5.prototype.destroy = function () {
        delete this._hash;
        delete this._buff;
        delete this._length;
    };

    /**
     * Finish the final calculation based on the tail.
     *
     * @param {Array}  tail   The tail (will be modified)
     * @param {Number} length The length of the remaining buffer
     */
    SparkMD5.prototype._finish = function (tail, length) {
        var i = length,
            tmp,
            lo,
            hi;

        tail[i >> 2] |= 0x80 << ((i % 4) << 3);
        if (i > 55) {
            md5cycle(this._hash, tail);
            for (i = 0; i < 16; i += 1) {
                tail[i] = 0;
            }
        }

        // Do the final computation based on the tail and length
        // Beware that the final length may not fit in 32 bits so we take care of that
        tmp = this._length * 8;
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
        lo = parseInt(tmp[2], 16);
        hi = parseInt(tmp[1], 16) || 0;

        tail[14] = lo;
        tail[15] = hi;
        md5cycle(this._hash, tail);
    };

    /**
     * Performs the md5 hash on a string.
     * A conversion will be applied if utf8 string is detected.
     *
     * @param {String}  str The string
     * @param {Boolean} [raw] True to get the raw string, false to get the hex string
     *
     * @return {String} The result
     */
    SparkMD5.hash = function (str, raw) {
        // Converts the string to utf8 bytes if necessary
        // Then compute it using the binary function
        return SparkMD5.hashBinary(toUtf8(str), raw);
    };

    /**
     * Performs the md5 hash on a binary string.
     *
     * @param {String}  content The binary string
     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string
     *
     * @return {String} The result
     */
    SparkMD5.hashBinary = function (content, raw) {
        var hash = md51(content),
            ret = hex(hash);

        return raw ? hexToBinaryString(ret) : ret;
    };

    // ---------------------------------------------------

    /**
     * SparkMD5 OOP implementation for array buffers.
     *
     * Use this class to perform an incremental md5 ONLY for array buffers.
     */
    SparkMD5.ArrayBuffer = function () {
        // call reset to init the instance
        this.reset();
    };

    /**
     * Appends an array buffer.
     *
     * @param {ArrayBuffer} arr The array to be appended
     *
     * @return {SparkMD5.ArrayBuffer} The instance itself
     */
    SparkMD5.ArrayBuffer.prototype.append = function (arr) {
        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),
            length = buff.length,
            i;

        this._length += arr.byteLength;

        for (i = 64; i <= length; i += 64) {
            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));
        }

        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);

        return this;
    };

    /**
     * Finishes the incremental computation, reseting the internal state and
     * returning the result.
     *
     * @param {Boolean} raw True to get the raw string, false to get the hex string
     *
     * @return {String} The result
     */
    SparkMD5.ArrayBuffer.prototype.end = function (raw) {
        var buff = this._buff,
            length = buff.length,
            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            i,
            ret;

        for (i = 0; i < length; i += 1) {
            tail[i >> 2] |= buff[i] << ((i % 4) << 3);
        }

        this._finish(tail, length);
        ret = hex(this._hash);

        if (raw) {
            ret = hexToBinaryString(ret);
        }

        this.reset();

        return ret;
    };

    /**
     * Resets the internal state of the computation.
     *
     * @return {SparkMD5.ArrayBuffer} The instance itself
     */
    SparkMD5.ArrayBuffer.prototype.reset = function () {
        this._buff = new Uint8Array(0);
        this._length = 0;
        this._hash = [1732584193, -271733879, -1732584194, 271733878];

        return this;
    };

    /**
     * Gets the internal state of the computation.
     *
     * @return {Object} The state
     */
    SparkMD5.ArrayBuffer.prototype.getState = function () {
        var state = SparkMD5.prototype.getState.call(this);

        // Convert buffer to a string
        state.buff = arrayBuffer2Utf8Str(state.buff);

        return state;
    };

    /**
     * Gets the internal state of the computation.
     *
     * @param {Object} state The state
     *
     * @return {SparkMD5.ArrayBuffer} The instance itself
     */
    SparkMD5.ArrayBuffer.prototype.setState = function (state) {
        // Convert string to buffer
        state.buff = utf8Str2ArrayBuffer(state.buff, true);

        return SparkMD5.prototype.setState.call(this, state);
    };

    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;

    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;

    /**
     * Performs the md5 hash on an array buffer.
     *
     * @param {ArrayBuffer} arr The array buffer
     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one
     *
     * @return {String} The result
     */
    SparkMD5.ArrayBuffer.hash = function (arr, raw) {
        var hash = md51_array(new Uint8Array(arr)),
            ret = hex(hash);

        return raw ? hexToBinaryString(ret) : ret;
    };

    return SparkMD5;
}));


/***/ }),

/***/ "./node_modules/validator/lib/isEmpty.js":
/*!***********************************************!*\
  !*** ./node_modules/validator/lib/isEmpty.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEmpty;

var _assertString = _interopRequireDefault(__webpack_require__(/*! ./util/assertString */ "./node_modules/validator/lib/util/assertString.js"));

var _merge = _interopRequireDefault(__webpack_require__(/*! ./util/merge */ "./node_modules/validator/lib/util/merge.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_is_empty_options = {
  ignore_whitespace: false
};

function isEmpty(str, options) {
  (0, _assertString.default)(str);
  options = (0, _merge.default)(options, default_is_empty_options);
  return (options.ignore_whitespace ? str.trim().length : str.length) === 0;
}

module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),

/***/ "./node_modules/validator/lib/util/assertString.js":
/*!*********************************************************!*\
  !*** ./node_modules/validator/lib/util/assertString.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = assertString;

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function assertString(input) {
  var isString = typeof input === 'string' || input instanceof String;

  if (!isString) {
    var invalidType;

    if (input === null) {
      invalidType = 'null';
    } else {
      invalidType = _typeof(input);

      if (invalidType === 'object' && input.constructor && input.constructor.hasOwnProperty('name')) {
        invalidType = input.constructor.name;
      } else {
        invalidType = "a ".concat(invalidType);
      }
    }

    throw new TypeError("Expected string but received ".concat(invalidType, "."));
  }
}

module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),

/***/ "./node_modules/validator/lib/util/merge.js":
/*!**************************************************!*\
  !*** ./node_modules/validator/lib/util/merge.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = merge;

function merge() {
  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var defaults = arguments.length > 1 ? arguments[1] : undefined;

  for (var key in defaults) {
    if (typeof obj[key] === 'undefined') {
      obj[key] = defaults[key];
    }
  }

  return obj;
}

module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "@wordpress/dom-ready":
/*!*******************************************!*\
  !*** external {"this":["wp","domReady"]} ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function() { module.exports = this["wp"]["domReady"]; }());

/***/ }),

/***/ "react":
/*!*********************************!*\
  !*** external {"this":"React"} ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function() { module.exports = this["React"]; }());

/***/ }),

/***/ "react-dom":
/*!************************************!*\
  !*** external {"this":"ReactDOM"} ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function() { module.exports = this["ReactDOM"]; }());

/***/ })

/******/ });
//# sourceMappingURL=index.min.js.map